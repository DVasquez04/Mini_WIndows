
import java.awt.Color;
import java.awt.GraphicsEnvironment;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.MutableTreeNode;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Diego Vasquez
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        //Para que se abra en full screen
        this.setExtendedState(MAXIMIZED_BOTH);
        //Agregar los users creados al arraylist usuarios
        Scanner sc = null;
        File users = new File("./Usuarios.txt");
        if (users.exists()) {
            try {
                sc = new Scanner(users);
                sc.useDelimiter(";");
                while (sc.hasNext()) {
                    usuarios.add(new Usuario(sc.next(), sc.next()));
                }
            } catch (Exception ex) {
            }
            sc.close();
        }//if
        
        //cosas pa Mord (el font)
        docMord = TP_PaginaMord.getStyledDocument();
        estiloMord = TP_PaginaMord.addStyle("miEstilo", null);
        DefaultComboBoxModel modelo=(DefaultComboBoxModel) cb_FuenteMord.getModel();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String fontNames[] = ge.getAvailableFontFamilyNames();
        for (int i = 0; i < fontNames.length; i++) {
            modelo.addElement(fontNames[i]);
        }
        cb_FuenteMord.setModel(modelo);
        
        //Cosas para el visor de imagenes
        for (int i = 1; i < 4; i++) {
            Imagen[i] = new ImageIcon(getClass().getResource("/VisorImagenes/img"+i+".jpg"));
        }
        jl_VisorPrincipal.setIcon(Imagen[1]);
        
        //cosas de hilos para las horas de taskBar y top bar
        HiloHora taskBar = new HiloHora(jl_HoraTaskBar);
        Thread H1 = new Thread(taskBar);
        HiloHora topBar = new HiloHora(jl_HoraTopBar);
        Thread H2 = new Thread(topBar);
        H1.start();
        H2.start();
        
        
        //cosa del calendario
        //iniciar el JLabel de homescreen invisible
        jl_RecordatorioActivo.setVisible(false);
        
        //cosas del fileNavigator
        modeloBase = (DefaultTreeModel)JT_FileNavigator.getModel();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_LogIn = new javax.swing.JDialog();
        jp_loginBackGround = new javax.swing.JPanel();
        jp_topBackGround = new javax.swing.JPanel();
        jl_mindowsLogOn = new javax.swing.JLabel();
        jp_midBackGround = new javax.swing.JPanel();
        jl_LogoMindows = new javax.swing.JLabel();
        jl_mindows = new javax.swing.JLabel();
        jl_copyright = new javax.swing.JLabel();
        jl_wicrosoftCorp = new javax.swing.JLabel();
        jp_infoPane = new javax.swing.JPanel();
        jl_userName = new javax.swing.JLabel();
        jl_password = new javax.swing.JLabel();
        jt_UserName = new javax.swing.JTextField();
        jt_password = new javax.swing.JTextField();
        jb_Ok = new javax.swing.JButton();
        jb_cancelar = new javax.swing.JButton();
        jb_ShutDown = new javax.swing.JButton();
        jb_opciones = new javax.swing.JButton();
        jd_Mord = new javax.swing.JDialog();
        jp_MordBackground = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TP_PaginaMord = new javax.swing.JTextPane();
        jl_FuenteMord = new javax.swing.JLabel();
        cb_FuenteMord = new javax.swing.JComboBox<>();
        jl_TamMord = new javax.swing.JLabel();
        cb_Tama√±oMord = new javax.swing.JComboBox<>();
        jl_ColorMord = new javax.swing.JLabel();
        jl_ColoresUtilizadosMord = new javax.swing.JLabel();
        jp_MordToolbar = new javax.swing.JPanel();
        jl_ArchivoMord = new javax.swing.JLabel();
        Icon_TijeraMord = new javax.swing.JLabel();
        Icon_CopiarMord = new javax.swing.JLabel();
        Icon_PegarMord = new javax.swing.JLabel();
        Icon_PaTrasMord = new javax.swing.JLabel();
        Icon_PaDelanteMord = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jl_BoldMord = new javax.swing.JLabel();
        jl_ItalixMord = new javax.swing.JLabel();
        jl_UnderlineMord = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jl_JustIzquierdaMord = new javax.swing.JLabel();
        jl_JustCentroMord = new javax.swing.JLabel();
        jl_JustDerechaMord = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jl_AliniarArribaMord = new javax.swing.JLabel();
        jl_AliniarCentroMord = new javax.swing.JLabel();
        jl_AliniarAbajoMord = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jl_Resaltar = new javax.swing.JLabel();
        jp_ColorLetraMord = new javax.swing.JPanel();
        jp_LastColor1 = new javax.swing.JPanel();
        jp_LastColor2 = new javax.swing.JPanel();
        jp_LastColor3 = new javax.swing.JPanel();
        jp_LastColor4 = new javax.swing.JPanel();
        jp_LastColor5 = new javax.swing.JPanel();
        jp_LastColor6 = new javax.swing.JPanel();
        jp_LastColor7 = new javax.swing.JPanel();
        jp_LastColor8 = new javax.swing.JPanel();
        jd_FileNavegator = new javax.swing.JDialog();
        jp_FileNavegatorBackGround = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        JT_FileNavigator = new javax.swing.JTree();
        jd_VisorImagenes = new javax.swing.JDialog();
        jp_VisorImagenesBackGround = new javax.swing.JPanel();
        jl_VisorPrincipal = new javax.swing.JLabel();
        jb_derechaVI = new javax.swing.JButton();
        jb_izquierdaVI = new javax.swing.JButton();
        jp_espaciadorIDK = new javax.swing.JPanel();
        jd_Calendario = new javax.swing.JDialog();
        jp_CalendarioBackGround = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_Recordatorios = new javax.swing.JTable();
        cb_HorasRecordatorio = new javax.swing.JComboBox<>();
        cb_MinutosRecordatorio = new javax.swing.JComboBox<>();
        cb_SegundosRecordatorio = new javax.swing.JComboBox<>();
        jrb_TareaCalendario = new javax.swing.JRadioButton();
        jrb_EventoCalendario = new javax.swing.JRadioButton();
        jl_FechaEventCalendario = new javax.swing.JLabel();
        jl_TiempoDelRecordatorio = new javax.swing.JLabel();
        jl_colonJPlanner = new javax.swing.JLabel();
        jl_colonJPlanner1 = new javax.swing.JLabel();
        jc_FechaRecordatorio = new com.toedter.calendar.JCalendar();
        jb_ProcesarRecordatorio = new javax.swing.JButton();
        jl_TituloRec = new javax.swing.JLabel();
        jt_TituloRecordatorio = new javax.swing.JTextField();
        jd_CMD = new javax.swing.JDialog();
        jp_CMDBackGround = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jd_MusicPlayer = new javax.swing.JDialog();
        jp_MusicPlayerBackGround = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jt_Playlist = new javax.swing.JTable();
        jb_AgregarCancion = new javax.swing.JButton();
        jb_Play = new javax.swing.JButton();
        jb_Stop = new javax.swing.JButton();
        jb_Pause = new javax.swing.JButton();
        jd_Mensajero = new javax.swing.JDialog();
        jp_mensajeroBackGround = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TP_GroupChat = new javax.swing.JTextPane();
        JL_PcGroupChat = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        TP_MsgKeyBoard = new javax.swing.JTextPane();
        jb_SendText = new javax.swing.JButton();
        jd_Meta = new javax.swing.JDialog();
        jp_MetaBackGround = new javax.swing.JPanel();
        jd_NetBeans = new javax.swing.JDialog();
        jp_NetBeansBackGround = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        JT_NetBeans = new javax.swing.JTree();
        jScrollPane9 = new javax.swing.JScrollPane();
        TP_CodingSpace = new javax.swing.JTextPane();
        jpm_MordArchivo = new javax.swing.JPopupMenu();
        jm_MordGuardar = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jm_MordAbrir = new javax.swing.JMenuItem();
        jpm_LogInOpciones = new javax.swing.JPopupMenu();
        jm_AdminPass = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jm_LimpiarCajas = new javax.swing.JMenuItem();
        bg_TareaoEvento = new javax.swing.ButtonGroup();
        jpm_SessionShutter = new javax.swing.JPopupMenu();
        jm_LockComputer = new javax.swing.JMenuItem();
        jm_ChangePassword = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        jm_Cancelar = new javax.swing.JMenuItem();
        jpm_UsuariosSettingsAdmin = new javax.swing.JPopupMenu();
        jm_AgregarUsuario = new javax.swing.JMenuItem();
        jm_EliminarUsuario = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        jm_Cancelar1 = new javax.swing.JMenuItem();
        jpm_JTreeMenu = new javax.swing.JPopupMenu();
        jm_Organizar = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        jm_OrdenarNombre = new javax.swing.JMenuItem();
        jm_OrdenarFecha = new javax.swing.JMenuItem();
        jm_OrdenarTipo = new javax.swing.JMenuItem();
        jm_OrdenarTama√±o = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JPopupMenu.Separator();
        JM_ExtraOpciones = new javax.swing.JMenu();
        jm_Agregar = new javax.swing.JMenuItem();
        jm_CambiarNombre = new javax.swing.JMenuItem();
        jm_Copiar = new javax.swing.JMenuItem();
        jm_Pegar = new javax.swing.JMenuItem();
        jd_AgregarUsuario = new javax.swing.JDialog();
        jp_AgregarBackground = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jt_NombreNewUser = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jt_ContraNewUser = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jt_ConfirmContraNewUser = new javax.swing.JTextField();
        jb_AgregarUsuarioNuevo = new javax.swing.JButton();
        jd_EliminarUsuarios = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jb_ElimUser = new javax.swing.JButton();
        jt_EliminarUser = new javax.swing.JTextField();
        jp_LockScreenBackGround = new javax.swing.JPanel();
        jl_LockScreen = new javax.swing.JLabel();
        jp_HomeScreenBackGround = new javax.swing.JPanel();
        jp_topbarHS = new javax.swing.JPanel();
        jl_HoraTopBar = new javax.swing.JLabel();
        jl_CurrentUser = new javax.swing.JLabel();
        jl_RecordatorioActivo = new javax.swing.JLabel();
        jp_HomeScreenIcons = new javax.swing.JPanel();
        Icon_Navegador = new javax.swing.JLabel();
        Icon_FileExplorer = new javax.swing.JLabel();
        Icon_Mord = new javax.swing.JLabel();
        Icon_Imagen = new javax.swing.JLabel();
        Icon_Calendario = new javax.swing.JLabel();
        Icon_CDM = new javax.swing.JLabel();
        Icon_MP3 = new javax.swing.JLabel();
        Icon_Msjr = new javax.swing.JLabel();
        Icon_RedSocial = new javax.swing.JLabel();
        Icon_NetBeans = new javax.swing.JLabel();
        jp_TaskBar = new javax.swing.JPanel();
        UselessButton = new javax.swing.JButton();
        jb_UsuariosSettings = new javax.swing.JButton();
        jb_SessionShutter = new javax.swing.JButton();
        jl_HoraTaskBar = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jd_LogIn.setResizable(false);

        jp_loginBackGround.setBackground(new java.awt.Color(51, 153, 255));
        jp_loginBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jp_topBackGround.setBackground(new java.awt.Color(0, 0, 255));
        jp_topBackGround.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jp_topBackGround.setForeground(new java.awt.Color(0, 0, 153));

        jl_mindowsLogOn.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jl_mindowsLogOn.setForeground(new java.awt.Color(255, 255, 255));
        jl_mindowsLogOn.setText("Log On to Mindows");

        javax.swing.GroupLayout jp_topBackGroundLayout = new javax.swing.GroupLayout(jp_topBackGround);
        jp_topBackGround.setLayout(jp_topBackGroundLayout);
        jp_topBackGroundLayout.setHorizontalGroup(
            jp_topBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_topBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jl_mindowsLogOn, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(470, Short.MAX_VALUE))
        );
        jp_topBackGroundLayout.setVerticalGroup(
            jp_topBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_topBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jl_mindowsLogOn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jp_loginBackGround.add(jp_topBackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 40));

        jp_midBackGround.setBackground(new java.awt.Color(29, 93, 193));
        jp_midBackGround.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jl_LogoMindows.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Mindows_Icon.jpg"))); // NOI18N

        jl_mindows.setBackground(new java.awt.Color(255, 255, 255));
        jl_mindows.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jl_mindows.setForeground(new java.awt.Color(255, 255, 255));
        jl_mindows.setText("MINDOWS");

        jl_copyright.setFont(new java.awt.Font("Comic Sans MS", 1, 10)); // NOI18N
        jl_copyright.setForeground(new java.awt.Color(255, 255, 255));
        jl_copyright.setText("CopyRight¬© 2023-2023");

        jl_wicrosoftCorp.setBackground(new java.awt.Color(255, 255, 255));
        jl_wicrosoftCorp.setFont(new java.awt.Font("Comic Sans MS", 1, 10)); // NOI18N
        jl_wicrosoftCorp.setForeground(new java.awt.Color(255, 255, 255));
        jl_wicrosoftCorp.setText("Wicrosoft Corporations");

        javax.swing.GroupLayout jp_midBackGroundLayout = new javax.swing.GroupLayout(jp_midBackGround);
        jp_midBackGround.setLayout(jp_midBackGroundLayout);
        jp_midBackGroundLayout.setHorizontalGroup(
            jp_midBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_midBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_midBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl_copyright, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl_wicrosoftCorp, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_LogoMindows, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jl_mindows, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jp_midBackGroundLayout.setVerticalGroup(
            jp_midBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_midBackGroundLayout.createSequentialGroup()
                .addGap(0, 1, Short.MAX_VALUE)
                .addComponent(jl_LogoMindows, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jp_midBackGroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jl_copyright, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_midBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl_mindows)
                    .addComponent(jl_wicrosoftCorp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jp_loginBackGround.add(jp_midBackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 730, 160));

        jp_infoPane.setBackground(new java.awt.Color(255, 255, 204));

        jl_userName.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jl_userName.setForeground(new java.awt.Color(0, 0, 0));
        jl_userName.setText("User Name:");

        jl_password.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jl_password.setForeground(new java.awt.Color(0, 0, 0));
        jl_password.setText("Password: ");

        jt_UserName.setForeground(new java.awt.Color(204, 204, 204));
        jt_UserName.setText("Ingrese su UserName:");
        jt_UserName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_UserNameMouseClicked(evt);
            }
        });

        jt_password.setForeground(new java.awt.Color(204, 204, 204));
        jt_password.setText("**********");
        jt_password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_passwordMouseClicked(evt);
            }
        });

        jb_Ok.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jb_Ok.setText("OK");
        jb_Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_OkActionPerformed(evt);
            }
        });

        jb_cancelar.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jb_cancelar.setText("Cancelar");
        jb_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cancelarActionPerformed(evt);
            }
        });

        jb_ShutDown.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jb_ShutDown.setText("ShutDown");
        jb_ShutDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_ShutDownActionPerformed(evt);
            }
        });

        jb_opciones.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jb_opciones.setText("Opciones <<");
        jb_opciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_opcionesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_infoPaneLayout = new javax.swing.GroupLayout(jp_infoPane);
        jp_infoPane.setLayout(jp_infoPaneLayout);
        jp_infoPaneLayout.setHorizontalGroup(
            jp_infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_infoPaneLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jp_infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jl_password, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jl_userName, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_infoPaneLayout.createSequentialGroup()
                        .addComponent(jb_Ok)
                        .addGap(27, 27, 27)
                        .addComponent(jb_cancelar)
                        .addGap(34, 34, 34)
                        .addComponent(jb_ShutDown)
                        .addGap(30, 30, 30)
                        .addComponent(jb_opciones))
                    .addGroup(jp_infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jt_UserName, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                        .addComponent(jt_password)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        jp_infoPaneLayout.setVerticalGroup(
            jp_infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_infoPaneLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jp_infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_userName, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jt_UserName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jp_infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_password, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jp_infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_Ok)
                    .addComponent(jb_cancelar)
                    .addComponent(jb_ShutDown)
                    .addComponent(jb_opciones))
                .addGap(41, 41, 41))
        );

        jp_loginBackGround.add(jp_infoPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 200, 740, 270));

        javax.swing.GroupLayout jd_LogInLayout = new javax.swing.GroupLayout(jd_LogIn.getContentPane());
        jd_LogIn.getContentPane().setLayout(jd_LogInLayout);
        jd_LogInLayout.setHorizontalGroup(
            jd_LogInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_loginBackGround, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_LogInLayout.setVerticalGroup(
            jd_LogInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_loginBackGround, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_Mord.setTitle("Editor de Texto \"Mord\"");
        jd_Mord.setResizable(false);

        jp_MordBackground.setBackground(new java.awt.Color(255, 255, 204));
        jp_MordBackground.setPreferredSize(new java.awt.Dimension(1560, 820));
        jp_MordBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TP_PaginaMord.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(TP_PaginaMord);

        jp_MordBackground.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 1380, 550));

        jl_FuenteMord.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jl_FuenteMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_FuenteMord.setText("Fuente:");
        jp_MordBackground.add(jl_FuenteMord, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, -1, -1));

        cb_FuenteMord.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_FuenteMordItemStateChanged(evt);
            }
        });
        jp_MordBackground.add(cb_FuenteMord, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 190, 30));

        jl_TamMord.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jl_TamMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_TamMord.setText("Tama√±o:");
        jp_MordBackground.add(jl_TamMord, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, 90, -1));

        cb_Tama√±oMord.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "14", "16", "18", "20", "22", "24", "30", "36", "40", "48", "60", "64", "72" }));
        cb_Tama√±oMord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_Tama√±oMordActionPerformed(evt);
            }
        });
        jp_MordBackground.add(cb_Tama√±oMord, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 110, 30));

        jl_ColorMord.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jl_ColorMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_ColorMord.setText("Color:");
        jp_MordBackground.add(jl_ColorMord, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 70, 80, -1));

        jl_ColoresUtilizadosMord.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jl_ColoresUtilizadosMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_ColoresUtilizadosMord.setText("Colores Utilizados:");
        jp_MordBackground.add(jl_ColoresUtilizadosMord, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 70, 180, -1));

        jp_MordToolbar.setBackground(new java.awt.Color(255, 255, 153));

        jl_ArchivoMord.setBackground(new java.awt.Color(204, 204, 204));
        jl_ArchivoMord.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jl_ArchivoMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_ArchivoMord.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_ArchivoMord.setText("Archivo");
        jl_ArchivoMord.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jl_ArchivoMord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_ArchivoMordMouseClicked(evt);
            }
        });

        Icon_TijeraMord.setForeground(new java.awt.Color(0, 0, 0));
        Icon_TijeraMord.setText("*Tijera");

        Icon_CopiarMord.setForeground(new java.awt.Color(0, 0, 0));
        Icon_CopiarMord.setText("*copiar");

        Icon_PegarMord.setForeground(new java.awt.Color(0, 0, 0));
        Icon_PegarMord.setText("*Pegar");

        Icon_PaTrasMord.setForeground(new java.awt.Color(0, 0, 0));
        Icon_PaTrasMord.setText("<-");

        Icon_PaDelanteMord.setForeground(new java.awt.Color(0, 0, 0));
        Icon_PaDelanteMord.setText("->");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setAlignmentX(1.0F);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setAlignmentX(1.0F);

        jl_BoldMord.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jl_BoldMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_BoldMord.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_BoldMord.setText("B");
        jl_BoldMord.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jl_BoldMord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jl_BoldMord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_BoldMordMouseClicked(evt);
            }
        });

        jl_ItalixMord.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jl_ItalixMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_ItalixMord.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_ItalixMord.setText("I");
        jl_ItalixMord.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jl_ItalixMord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jl_ItalixMord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_ItalixMordMouseClicked(evt);
            }
        });

        jl_UnderlineMord.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        jl_UnderlineMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_UnderlineMord.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_UnderlineMord.setText("U");
        jl_UnderlineMord.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jl_UnderlineMord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jl_UnderlineMord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_UnderlineMordMouseClicked(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(1.0F);

        jl_JustIzquierdaMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_JustIzquierdaMord.setText("*Pizq");

        jl_JustCentroMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_JustCentroMord.setText("*Pcen");

        jl_JustDerechaMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_JustDerechaMord.setText("*Pder");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator4.setAlignmentX(1.0F);

        jl_AliniarArribaMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_AliniarArribaMord.setText("*AAri");

        jl_AliniarCentroMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_AliniarCentroMord.setText("*ACen");

        jl_AliniarAbajoMord.setForeground(new java.awt.Color(0, 0, 0));
        jl_AliniarAbajoMord.setText("*AAba");

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator5.setAlignmentX(1.0F);

        jl_Resaltar.setForeground(new java.awt.Color(0, 0, 0));
        jl_Resaltar.setText("*resaltar");
        jl_Resaltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jl_Resaltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_ResaltarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_MordToolbarLayout = new javax.swing.GroupLayout(jp_MordToolbar);
        jp_MordToolbar.setLayout(jp_MordToolbarLayout);
        jp_MordToolbarLayout.setHorizontalGroup(
            jp_MordToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_MordToolbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jl_ArchivoMord, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Icon_TijeraMord, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Icon_CopiarMord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Icon_PegarMord)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Icon_PaTrasMord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Icon_PaDelanteMord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jl_BoldMord, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_ItalixMord, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_UnderlineMord, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_JustIzquierdaMord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_JustCentroMord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_JustDerechaMord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_AliniarArribaMord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_AliniarCentroMord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_AliniarAbajoMord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_Resaltar)
                .addContainerGap(834, Short.MAX_VALUE))
        );
        jp_MordToolbarLayout.setVerticalGroup(
            jp_MordToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_MordToolbarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_MordToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_MordToolbarLayout.createSequentialGroup()
                        .addGap(0, 3, Short.MAX_VALUE)
                        .addGroup(jp_MordToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jl_ItalixMord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jp_MordToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jl_ArchivoMord)
                                .addComponent(Icon_TijeraMord)
                                .addComponent(Icon_CopiarMord)
                                .addComponent(Icon_PegarMord)
                                .addComponent(Icon_PaTrasMord)
                                .addComponent(Icon_PaDelanteMord))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_MordToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jl_BoldMord)
                                .addComponent(jl_UnderlineMord))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_MordToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jl_JustIzquierdaMord)
                                .addComponent(jl_JustCentroMord)
                                .addComponent(jl_JustDerechaMord))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_MordToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jl_AliniarArribaMord)
                                .addComponent(jl_AliniarCentroMord)
                                .addComponent(jl_AliniarAbajoMord))
                            .addComponent(jl_Resaltar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator4)
                    .addComponent(jSeparator5))
                .addContainerGap())
        );

        jp_MordBackground.add(jp_MordToolbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1540, 40));

        jp_ColorLetraMord.setBackground(new java.awt.Color(0, 0, 0));
        jp_ColorLetraMord.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jp_ColorLetraMord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jp_ColorLetraMord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jp_ColorLetraMordMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_ColorLetraMordLayout = new javax.swing.GroupLayout(jp_ColorLetraMord);
        jp_ColorLetraMord.setLayout(jp_ColorLetraMordLayout);
        jp_ColorLetraMordLayout.setHorizontalGroup(
            jp_ColorLetraMordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        jp_ColorLetraMordLayout.setVerticalGroup(
            jp_ColorLetraMordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        jp_MordBackground.add(jp_ColorLetraMord, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 60, 40, 40));

        jp_LastColor1.setBackground(new java.awt.Color(255, 255, 255));
        jp_LastColor1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jp_LastColor1Layout = new javax.swing.GroupLayout(jp_LastColor1);
        jp_LastColor1.setLayout(jp_LastColor1Layout);
        jp_LastColor1Layout.setHorizontalGroup(
            jp_LastColor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        jp_LastColor1Layout.setVerticalGroup(
            jp_LastColor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jp_MordBackground.add(jp_LastColor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 50, 40, 30));

        jp_LastColor2.setBackground(new java.awt.Color(255, 255, 255));
        jp_LastColor2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jp_LastColor2Layout = new javax.swing.GroupLayout(jp_LastColor2);
        jp_LastColor2.setLayout(jp_LastColor2Layout);
        jp_LastColor2Layout.setHorizontalGroup(
            jp_LastColor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        jp_LastColor2Layout.setVerticalGroup(
            jp_LastColor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jp_MordBackground.add(jp_LastColor2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 50, 40, 30));

        jp_LastColor3.setBackground(new java.awt.Color(255, 255, 255));
        jp_LastColor3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jp_LastColor3Layout = new javax.swing.GroupLayout(jp_LastColor3);
        jp_LastColor3.setLayout(jp_LastColor3Layout);
        jp_LastColor3Layout.setHorizontalGroup(
            jp_LastColor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        jp_LastColor3Layout.setVerticalGroup(
            jp_LastColor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jp_MordBackground.add(jp_LastColor3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 50, -1, -1));

        jp_LastColor4.setBackground(new java.awt.Color(255, 255, 255));
        jp_LastColor4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jp_LastColor4Layout = new javax.swing.GroupLayout(jp_LastColor4);
        jp_LastColor4.setLayout(jp_LastColor4Layout);
        jp_LastColor4Layout.setHorizontalGroup(
            jp_LastColor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        jp_LastColor4Layout.setVerticalGroup(
            jp_LastColor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jp_MordBackground.add(jp_LastColor4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 50, -1, -1));

        jp_LastColor5.setBackground(new java.awt.Color(255, 255, 255));
        jp_LastColor5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jp_LastColor5Layout = new javax.swing.GroupLayout(jp_LastColor5);
        jp_LastColor5.setLayout(jp_LastColor5Layout);
        jp_LastColor5Layout.setHorizontalGroup(
            jp_LastColor5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        jp_LastColor5Layout.setVerticalGroup(
            jp_LastColor5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jp_MordBackground.add(jp_LastColor5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 90, 40, 30));

        jp_LastColor6.setBackground(new java.awt.Color(255, 255, 255));
        jp_LastColor6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jp_LastColor6Layout = new javax.swing.GroupLayout(jp_LastColor6);
        jp_LastColor6.setLayout(jp_LastColor6Layout);
        jp_LastColor6Layout.setHorizontalGroup(
            jp_LastColor6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        jp_LastColor6Layout.setVerticalGroup(
            jp_LastColor6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jp_MordBackground.add(jp_LastColor6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 90, 40, 30));

        jp_LastColor7.setBackground(new java.awt.Color(255, 255, 255));
        jp_LastColor7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jp_LastColor7Layout = new javax.swing.GroupLayout(jp_LastColor7);
        jp_LastColor7.setLayout(jp_LastColor7Layout);
        jp_LastColor7Layout.setHorizontalGroup(
            jp_LastColor7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        jp_LastColor7Layout.setVerticalGroup(
            jp_LastColor7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jp_MordBackground.add(jp_LastColor7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 90, -1, -1));

        jp_LastColor8.setBackground(new java.awt.Color(255, 255, 255));
        jp_LastColor8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jp_LastColor8Layout = new javax.swing.GroupLayout(jp_LastColor8);
        jp_LastColor8.setLayout(jp_LastColor8Layout);
        jp_LastColor8Layout.setHorizontalGroup(
            jp_LastColor8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        jp_LastColor8Layout.setVerticalGroup(
            jp_LastColor8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jp_MordBackground.add(jp_LastColor8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 90, -1, -1));

        javax.swing.GroupLayout jd_MordLayout = new javax.swing.GroupLayout(jd_Mord.getContentPane());
        jd_Mord.getContentPane().setLayout(jd_MordLayout);
        jd_MordLayout.setHorizontalGroup(
            jd_MordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_MordBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_MordLayout.setVerticalGroup(
            jd_MordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_MordBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jp_FileNavegatorBackGround.setBackground(new java.awt.Color(255, 255, 255));
        jp_FileNavegatorBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jp_FileNavegatorBackGround.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 30));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode(":Z");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Musica");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Imagenes");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Documentos");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Otros");
        treeNode1.add(treeNode2);
        JT_FileNavigator.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        JT_FileNavigator.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JT_FileNavigatorMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(JT_FileNavigator);

        jp_FileNavegatorBackGround.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 520, 390));

        javax.swing.GroupLayout jd_FileNavegatorLayout = new javax.swing.GroupLayout(jd_FileNavegator.getContentPane());
        jd_FileNavegator.getContentPane().setLayout(jd_FileNavegatorLayout);
        jd_FileNavegatorLayout.setHorizontalGroup(
            jd_FileNavegatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_FileNavegatorBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_FileNavegatorLayout.setVerticalGroup(
            jd_FileNavegatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_FileNavegatorBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
        );

        jd_VisorImagenes.setTitle("Visor de Imagenes");

        jp_VisorImagenesBackGround.setBackground(new java.awt.Color(0, 0, 51));
        jp_VisorImagenesBackGround.setPreferredSize(new java.awt.Dimension(600, 400));
        jp_VisorImagenesBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jl_VisorPrincipal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jp_VisorImagenesBackGround.add(jl_VisorPrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 480, 270));

        jb_derechaVI.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jb_derechaVI.setText(">");
        jb_derechaVI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_derechaVIActionPerformed(evt);
            }
        });
        jp_VisorImagenesBackGround.add(jb_derechaVI, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 320, -1, -1));

        jb_izquierdaVI.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jb_izquierdaVI.setText("<");
        jb_izquierdaVI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_izquierdaVIActionPerformed(evt);
            }
        });
        jp_VisorImagenesBackGround.add(jb_izquierdaVI, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, -1, -1));

        javax.swing.GroupLayout jp_espaciadorIDKLayout = new javax.swing.GroupLayout(jp_espaciadorIDK);
        jp_espaciadorIDK.setLayout(jp_espaciadorIDKLayout);
        jp_espaciadorIDKLayout.setHorizontalGroup(
            jp_espaciadorIDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        jp_espaciadorIDKLayout.setVerticalGroup(
            jp_espaciadorIDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jp_VisorImagenesBackGround.add(jp_espaciadorIDK, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 20));

        javax.swing.GroupLayout jd_VisorImagenesLayout = new javax.swing.GroupLayout(jd_VisorImagenes.getContentPane());
        jd_VisorImagenes.getContentPane().setLayout(jd_VisorImagenesLayout);
        jd_VisorImagenesLayout.setHorizontalGroup(
            jd_VisorImagenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_VisorImagenesBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_VisorImagenesLayout.setVerticalGroup(
            jd_VisorImagenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_VisorImagenesBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_Calendario.setTitle("Planeador de Eventos o Tareas");
        jd_Calendario.setPreferredSize(new java.awt.Dimension(940, 530));
        jd_Calendario.setResizable(false);
        jd_Calendario.setSize(new java.awt.Dimension(1020, 530));

        jp_CalendarioBackGround.setBackground(new java.awt.Color(255, 204, 204));
        jp_CalendarioBackGround.setPreferredSize(new java.awt.Dimension(890, 520));
        jp_CalendarioBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1020, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jp_CalendarioBackGround.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 20));

        jt_Recordatorios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha Recordatorio", "Titulo", "Notas", "No Recordar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jt_Recordatorios);

        jp_CalendarioBackGround.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, 380, 450));

        cb_HorasRecordatorio.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        cb_HorasRecordatorio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        jp_CalendarioBackGround.add(cb_HorasRecordatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, -1, -1));

        cb_MinutosRecordatorio.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        cb_MinutosRecordatorio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        jp_CalendarioBackGround.add(cb_MinutosRecordatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, -1, -1));

        cb_SegundosRecordatorio.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        cb_SegundosRecordatorio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        jp_CalendarioBackGround.add(cb_SegundosRecordatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, -1, -1));

        bg_TareaoEvento.add(jrb_TareaCalendario);
        jrb_TareaCalendario.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jrb_TareaCalendario.setForeground(new java.awt.Color(0, 0, 0));
        jrb_TareaCalendario.setText("Tarea");
        jp_CalendarioBackGround.add(jrb_TareaCalendario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 470, -1, -1));

        bg_TareaoEvento.add(jrb_EventoCalendario);
        jrb_EventoCalendario.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jrb_EventoCalendario.setForeground(new java.awt.Color(0, 0, 0));
        jrb_EventoCalendario.setText("Evento");
        jp_CalendarioBackGround.add(jrb_EventoCalendario, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 470, -1, -1));

        jl_FechaEventCalendario.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jl_FechaEventCalendario.setForeground(new java.awt.Color(0, 0, 0));
        jl_FechaEventCalendario.setText("Escoger la fecha del Evento/Tarea");
        jp_CalendarioBackGround.add(jl_FechaEventCalendario, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 250, 30));

        jl_TiempoDelRecordatorio.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jl_TiempoDelRecordatorio.setForeground(new java.awt.Color(0, 0, 0));
        jl_TiempoDelRecordatorio.setText("Escoger a que hora mostrar el Recordatorio.");
        jp_CalendarioBackGround.add(jl_TiempoDelRecordatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 310, 30));

        jl_colonJPlanner.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jl_colonJPlanner.setForeground(new java.awt.Color(0, 0, 0));
        jl_colonJPlanner.setText(":");
        jp_CalendarioBackGround.add(jl_colonJPlanner, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 420, 10, -1));

        jl_colonJPlanner1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jl_colonJPlanner1.setForeground(new java.awt.Color(0, 0, 0));
        jl_colonJPlanner1.setText(":");
        jp_CalendarioBackGround.add(jl_colonJPlanner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 420, 10, -1));
        jp_CalendarioBackGround.add(jc_FechaRecordatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        jb_ProcesarRecordatorio.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jb_ProcesarRecordatorio.setText("->");
        jb_ProcesarRecordatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_ProcesarRecordatorioActionPerformed(evt);
            }
        });
        jp_CalendarioBackGround.add(jb_ProcesarRecordatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(432, 240, 50, -1));

        jl_TituloRec.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jl_TituloRec.setForeground(new java.awt.Color(0, 0, 0));
        jl_TituloRec.setText("Titulo del Recordatorio:");
        jp_CalendarioBackGround.add(jl_TituloRec, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));
        jp_CalendarioBackGround.add(jt_TituloRecordatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 150, -1));

        javax.swing.GroupLayout jd_CalendarioLayout = new javax.swing.GroupLayout(jd_Calendario.getContentPane());
        jd_Calendario.getContentPane().setLayout(jd_CalendarioLayout);
        jd_CalendarioLayout.setHorizontalGroup(
            jd_CalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_CalendarioBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, 1020, Short.MAX_VALUE)
        );
        jd_CalendarioLayout.setVerticalGroup(
            jd_CalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_CalendarioBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
        );

        jp_CMDBackGround.setBackground(new java.awt.Color(0, 0, 0));
        jp_CMDBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jp_CMDBackGround.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 20));

        jTextPane1.setBackground(new java.awt.Color(0, 0, 0));
        jTextPane1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jTextPane1.setForeground(new java.awt.Color(0, 0, 0));
        jScrollPane5.setViewportView(jTextPane1);

        jp_CMDBackGround.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 600, 290));

        javax.swing.GroupLayout jd_CMDLayout = new javax.swing.GroupLayout(jd_CMD.getContentPane());
        jd_CMD.getContentPane().setLayout(jd_CMDLayout);
        jd_CMDLayout.setHorizontalGroup(
            jd_CMDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_CMDBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_CMDLayout.setVerticalGroup(
            jd_CMDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_CMDBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );

        jd_MusicPlayer.setTitle("Mp3 Player");

        jp_MusicPlayerBackGround.setBackground(new java.awt.Color(204, 255, 255));
        jp_MusicPlayerBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jt_Playlist.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jt_Playlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Playlist"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jt_Playlist);

        jp_MusicPlayerBackGround.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 550, 200));

        jb_AgregarCancion.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jb_AgregarCancion.setText("Agregar Cancion");
        jb_AgregarCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_AgregarCancionActionPerformed(evt);
            }
        });
        jp_MusicPlayerBackGround.add(jb_AgregarCancion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jb_Play.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jb_Play.setText("PLAY");
        jb_Play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_PlayActionPerformed(evt);
            }
        });
        jp_MusicPlayerBackGround.add(jb_Play, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 100, 70));

        jb_Stop.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jb_Stop.setText("STOP");
        jb_Stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_StopActionPerformed(evt);
            }
        });
        jp_MusicPlayerBackGround.add(jb_Stop, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, 100, 70));

        jb_Pause.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jb_Pause.setText("PAUSE");
        jb_Pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_PauseActionPerformed(evt);
            }
        });
        jp_MusicPlayerBackGround.add(jb_Pause, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, 160, 70));

        javax.swing.GroupLayout jd_MusicPlayerLayout = new javax.swing.GroupLayout(jd_MusicPlayer.getContentPane());
        jd_MusicPlayer.getContentPane().setLayout(jd_MusicPlayerLayout);
        jd_MusicPlayerLayout.setHorizontalGroup(
            jd_MusicPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_MusicPlayerBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
        );
        jd_MusicPlayerLayout.setVerticalGroup(
            jd_MusicPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_MusicPlayerBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
        );

        jp_mensajeroBackGround.setBackground(new java.awt.Color(102, 102, 255));
        jp_mensajeroBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jp_mensajeroBackGround.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 20));

        TP_GroupChat.setEditable(false);
        jScrollPane6.setViewportView(TP_GroupChat);

        jp_mensajeroBackGround.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 670, 310));

        JL_PcGroupChat.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        JL_PcGroupChat.setForeground(new java.awt.Color(0, 0, 0));
        JL_PcGroupChat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JL_PcGroupChat.setText("PC GroupChat");
        jp_mensajeroBackGround.add(JL_PcGroupChat, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 110, -1));

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));

        jScrollPane7.setViewportView(TP_MsgKeyBoard);

        jb_SendText.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jb_SendText.setForeground(new java.awt.Color(0, 0, 0));
        jb_SendText.setText("SEND");
        jb_SendText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_SendTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jb_SendText)
                .addGap(26, 26, 26))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7)
                    .addComponent(jb_SendText, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jp_mensajeroBackGround.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 700, -1));

        javax.swing.GroupLayout jd_MensajeroLayout = new javax.swing.GroupLayout(jd_Mensajero.getContentPane());
        jd_Mensajero.getContentPane().setLayout(jd_MensajeroLayout);
        jd_MensajeroLayout.setHorizontalGroup(
            jd_MensajeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_mensajeroBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_MensajeroLayout.setVerticalGroup(
            jd_MensajeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_mensajeroBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );

        jp_MetaBackGround.setBackground(new java.awt.Color(255, 255, 255));
        jp_MetaBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jd_MetaLayout = new javax.swing.GroupLayout(jd_Meta.getContentPane());
        jd_Meta.getContentPane().setLayout(jd_MetaLayout);
        jd_MetaLayout.setHorizontalGroup(
            jd_MetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_MetaBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_MetaLayout.setVerticalGroup(
            jd_MetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_MetaBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jp_NetBeansBackGround.setBackground(new java.awt.Color(255, 255, 255));
        jp_NetBeansBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 810, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jp_NetBeansBackGround.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 20));

        treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("MiniWindows");
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("<default package>");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Archivo");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Iconos");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("LockScreen");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("OperaLogo");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("MetaLogo");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("SpotifyL");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Mondows");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        JT_NetBeans.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane8.setViewportView(JT_NetBeans);

        jp_NetBeansBackGround.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 150, 510));

        TP_CodingSpace.setEnabled(false);
        jScrollPane9.setViewportView(TP_CodingSpace);

        jp_NetBeansBackGround.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 660, 510));

        javax.swing.GroupLayout jd_NetBeansLayout = new javax.swing.GroupLayout(jd_NetBeans.getContentPane());
        jd_NetBeans.getContentPane().setLayout(jd_NetBeansLayout);
        jd_NetBeansLayout.setHorizontalGroup(
            jd_NetBeansLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_NetBeansBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_NetBeansLayout.setVerticalGroup(
            jd_NetBeansLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_NetBeansBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jm_MordGuardar.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jm_MordGuardar.setText("Guardar");
        jm_MordGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_MordGuardarActionPerformed(evt);
            }
        });
        jpm_MordArchivo.add(jm_MordGuardar);
        jpm_MordArchivo.add(jSeparator6);

        jm_MordAbrir.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jm_MordAbrir.setText("Abrir");
        jm_MordAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_MordAbrirActionPerformed(evt);
            }
        });
        jpm_MordArchivo.add(jm_MordAbrir);

        jm_AdminPass.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jm_AdminPass.setText("Admin");
        jm_AdminPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_AdminPassActionPerformed(evt);
            }
        });
        jpm_LogInOpciones.add(jm_AdminPass);
        jpm_LogInOpciones.add(jSeparator7);

        jm_LimpiarCajas.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jm_LimpiarCajas.setText("Limpiar Cajas");
        jm_LimpiarCajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_LimpiarCajasActionPerformed(evt);
            }
        });
        jpm_LogInOpciones.add(jm_LimpiarCajas);

        jm_LockComputer.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_LockComputer.setText("Lock This Computer");
        jm_LockComputer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_LockComputerActionPerformed(evt);
            }
        });
        jpm_SessionShutter.add(jm_LockComputer);

        jm_ChangePassword.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_ChangePassword.setText("Change this Users Password");
        jm_ChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_ChangePasswordActionPerformed(evt);
            }
        });
        jpm_SessionShutter.add(jm_ChangePassword);
        jpm_SessionShutter.add(jSeparator8);

        jm_Cancelar.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_Cancelar.setText("Cancelar");
        jm_Cancelar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jpm_SessionShutter.add(jm_Cancelar);

        jm_AgregarUsuario.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_AgregarUsuario.setText("Agregar Usuario");
        jm_AgregarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_AgregarUsuarioActionPerformed(evt);
            }
        });
        jpm_UsuariosSettingsAdmin.add(jm_AgregarUsuario);

        jm_EliminarUsuario.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_EliminarUsuario.setText("Eliminar Usuario");
        jm_EliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_EliminarUsuarioActionPerformed(evt);
            }
        });
        jpm_UsuariosSettingsAdmin.add(jm_EliminarUsuario);
        jpm_UsuariosSettingsAdmin.add(jSeparator9);

        jm_Cancelar1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_Cancelar1.setText("Cancelar");
        jm_Cancelar1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jpm_UsuariosSettingsAdmin.add(jm_Cancelar1);

        jm_Organizar.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jm_Organizar.setForeground(new java.awt.Color(0, 0, 0));
        jm_Organizar.setText("Organizar");
        jm_Organizar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jm_Organizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_OrganizarActionPerformed(evt);
            }
        });
        jpm_JTreeMenu.add(jm_Organizar);
        jpm_JTreeMenu.add(jSeparator10);

        jm_OrdenarNombre.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_OrdenarNombre.setForeground(new java.awt.Color(0, 0, 0));
        jm_OrdenarNombre.setText("Ordenar por Nombre");
        jm_OrdenarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_OrdenarNombreActionPerformed(evt);
            }
        });
        jpm_JTreeMenu.add(jm_OrdenarNombre);

        jm_OrdenarFecha.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_OrdenarFecha.setForeground(new java.awt.Color(0, 0, 0));
        jm_OrdenarFecha.setText("Ordenar por Fecha");
        jm_OrdenarFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_OrdenarFechaActionPerformed(evt);
            }
        });
        jpm_JTreeMenu.add(jm_OrdenarFecha);

        jm_OrdenarTipo.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_OrdenarTipo.setForeground(new java.awt.Color(0, 0, 0));
        jm_OrdenarTipo.setText("Ordenar por Tipo");
        jm_OrdenarTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_OrdenarTipoActionPerformed(evt);
            }
        });
        jpm_JTreeMenu.add(jm_OrdenarTipo);

        jm_OrdenarTama√±o.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_OrdenarTama√±o.setForeground(new java.awt.Color(0, 0, 0));
        jm_OrdenarTama√±o.setText("Ordenar por Tama√±o");
        jm_OrdenarTama√±o.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_OrdenarTama√±oActionPerformed(evt);
            }
        });
        jpm_JTreeMenu.add(jm_OrdenarTama√±o);
        jpm_JTreeMenu.add(jSeparator11);

        JM_ExtraOpciones.setForeground(new java.awt.Color(0, 0, 0));
        JM_ExtraOpciones.setText("Extra Opciones");
        JM_ExtraOpciones.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        JM_ExtraOpciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jm_Agregar.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_Agregar.setForeground(new java.awt.Color(0, 0, 0));
        jm_Agregar.setText("Nuevo");
        jm_Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_AgregarActionPerformed(evt);
            }
        });
        JM_ExtraOpciones.add(jm_Agregar);

        jm_CambiarNombre.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_CambiarNombre.setForeground(new java.awt.Color(0, 0, 0));
        jm_CambiarNombre.setText("Cambiar Nombre");
        jm_CambiarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_CambiarNombreActionPerformed(evt);
            }
        });
        JM_ExtraOpciones.add(jm_CambiarNombre);

        jm_Copiar.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_Copiar.setForeground(new java.awt.Color(0, 0, 0));
        jm_Copiar.setText("Copiar");
        JM_ExtraOpciones.add(jm_Copiar);

        jm_Pegar.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jm_Pegar.setForeground(new java.awt.Color(0, 0, 0));
        jm_Pegar.setText("Pegar");
        JM_ExtraOpciones.add(jm_Pegar);

        jpm_JTreeMenu.add(JM_ExtraOpciones);

        jp_AgregarBackground.setBackground(new java.awt.Color(153, 255, 255));
        jp_AgregarBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jp_AgregarBackground.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 20));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Ingrese el Nombre de Usuario:");
        jp_AgregarBackground.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 240, 30));
        jp_AgregarBackground.add(jt_NombreNewUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 100, 150, 30));

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Crear Usuario");
        jp_AgregarBackground.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 190, 40));

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Ingrese la Contrase√±a:");
        jp_AgregarBackground.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 240, 30));
        jp_AgregarBackground.add(jt_ContraNewUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 150, 30));

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Confirme la Contrase√±a:");
        jp_AgregarBackground.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 240, 30));
        jp_AgregarBackground.add(jt_ConfirmContraNewUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 150, 30));

        jb_AgregarUsuarioNuevo.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jb_AgregarUsuarioNuevo.setText("Agregar Usuario");
        jb_AgregarUsuarioNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_AgregarUsuarioNuevoActionPerformed(evt);
            }
        });
        jp_AgregarBackground.add(jb_AgregarUsuarioNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 170, 50));

        javax.swing.GroupLayout jd_AgregarUsuarioLayout = new javax.swing.GroupLayout(jd_AgregarUsuario.getContentPane());
        jd_AgregarUsuario.getContentPane().setLayout(jd_AgregarUsuarioLayout);
        jd_AgregarUsuarioLayout.setHorizontalGroup(
            jd_AgregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_AgregarBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_AgregarUsuarioLayout.setVerticalGroup(
            jd_AgregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_AgregarBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
        );

        jPanel8.setBackground(new java.awt.Color(255, 204, 204));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanel8.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 20));

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("ELIMINAR USUARIOS");
        jPanel8.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 300, 40));

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Escoger Que Usuario Eliminar:");
        jPanel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 230, 40));

        jb_ElimUser.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jb_ElimUser.setForeground(new java.awt.Color(0, 0, 0));
        jb_ElimUser.setText("ELIMINAR");
        jb_ElimUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_ElimUserActionPerformed(evt);
            }
        });
        jPanel8.add(jb_ElimUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 170, 60));
        jPanel8.add(jt_EliminarUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, 170, 40));

        javax.swing.GroupLayout jd_EliminarUsuariosLayout = new javax.swing.GroupLayout(jd_EliminarUsuarios.getContentPane());
        jd_EliminarUsuarios.getContentPane().setLayout(jd_EliminarUsuariosLayout);
        jd_EliminarUsuariosLayout.setHorizontalGroup(
            jd_EliminarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_EliminarUsuariosLayout.setVerticalGroup(
            jd_EliminarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jp_LockScreenBackGround.setBackground(new java.awt.Color(102, 204, 255));
        jp_LockScreenBackGround.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jp_LockScreenBackGroundKeyPressed(evt);
            }
        });

        jl_LockScreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/LockScreen.jpg"))); // NOI18N
        jl_LockScreen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_LockScreenMouseClicked(evt);
            }
        });
        jl_LockScreen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jl_LockScreenKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jl_LockScreenKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jl_LockScreenKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jp_LockScreenBackGroundLayout = new javax.swing.GroupLayout(jp_LockScreenBackGround);
        jp_LockScreenBackGround.setLayout(jp_LockScreenBackGroundLayout);
        jp_LockScreenBackGroundLayout.setHorizontalGroup(
            jp_LockScreenBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_LockScreenBackGroundLayout.createSequentialGroup()
                .addComponent(jl_LockScreen)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jp_LockScreenBackGroundLayout.setVerticalGroup(
            jp_LockScreenBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jl_LockScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jp_HomeScreenBackGround.setBackground(new java.awt.Color(255, 153, 153));
        jp_HomeScreenBackGround.setPreferredSize(new java.awt.Dimension(1556, 875));
        jp_HomeScreenBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jp_topbarHS.setBackground(new java.awt.Color(102, 102, 102));

        jl_HoraTopBar.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jl_HoraTopBar.setForeground(new java.awt.Color(255, 255, 255));
        jl_HoraTopBar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_HoraTopBar.setText("00:00 AM");

        jl_CurrentUser.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jl_CurrentUser.setForeground(new java.awt.Color(255, 255, 255));
        jl_CurrentUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_CurrentUser.setText("Admin");

        jl_RecordatorioActivo.setForeground(new java.awt.Color(255, 255, 255));
        jl_RecordatorioActivo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_RecordatorioActivo.setText("üïí");

        javax.swing.GroupLayout jp_topbarHSLayout = new javax.swing.GroupLayout(jp_topbarHS);
        jp_topbarHS.setLayout(jp_topbarHSLayout);
        jp_topbarHSLayout.setHorizontalGroup(
            jp_topbarHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_topbarHSLayout.createSequentialGroup()
                .addContainerGap(1237, Short.MAX_VALUE)
                .addComponent(jl_RecordatorioActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jl_HoraTopBar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jl_CurrentUser, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );
        jp_topbarHSLayout.setVerticalGroup(
            jp_topbarHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_topbarHSLayout.createSequentialGroup()
                .addGroup(jp_topbarHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_HoraTopBar)
                    .addComponent(jl_CurrentUser)
                    .addComponent(jl_RecordatorioActivo))
                .addGap(0, 16, Short.MAX_VALUE))
        );

        jp_HomeScreenBackGround.add(jp_topbarHS, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1560, -1));

        jp_HomeScreenIcons.setBackground(new java.awt.Color(51, 51, 51));

        Icon_Navegador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Operagx_logo.png"))); // NOI18N
        Icon_Navegador.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        Icon_FileExplorer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/filNavigator.jpg"))); // NOI18N
        Icon_FileExplorer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Icon_FileExplorer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Icon_FileExplorerMouseClicked(evt);
            }
        });

        Icon_Mord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Mord.jpg"))); // NOI18N
        Icon_Mord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Icon_Mord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Icon_MordMouseClicked(evt);
            }
        });

        Icon_Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Img.png"))); // NOI18N
        Icon_Imagen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Icon_Imagen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Icon_ImagenMouseClicked(evt);
            }
        });

        Icon_Calendario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Calendar.jpg"))); // NOI18N
        Icon_Calendario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Icon_Calendario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Icon_CalendarioMouseClicked(evt);
            }
        });

        Icon_CDM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cmd.png"))); // NOI18N
        Icon_CDM.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Icon_CDM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Icon_CDMMouseClicked(evt);
            }
        });

        Icon_MP3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/spoty.png"))); // NOI18N
        Icon_MP3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Icon_MP3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Icon_MP3MouseClicked(evt);
            }
        });

        Icon_Msjr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/whats.jpg"))); // NOI18N
        Icon_Msjr.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Icon_Msjr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Icon_MsjrMouseClicked(evt);
            }
        });

        Icon_RedSocial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/meta.png"))); // NOI18N
        Icon_RedSocial.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Icon_RedSocial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Icon_RedSocialMouseClicked(evt);
            }
        });

        Icon_NetBeans.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/NetB.png"))); // NOI18N
        Icon_NetBeans.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Icon_NetBeans.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Icon_NetBeansMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_HomeScreenIconsLayout = new javax.swing.GroupLayout(jp_HomeScreenIcons);
        jp_HomeScreenIcons.setLayout(jp_HomeScreenIconsLayout);
        jp_HomeScreenIconsLayout.setHorizontalGroup(
            jp_HomeScreenIconsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_HomeScreenIconsLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jp_HomeScreenIconsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Icon_NetBeans, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Icon_RedSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Icon_Msjr, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Icon_MP3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Icon_Calendario, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Icon_CDM, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Icon_Imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Icon_Mord, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Icon_FileExplorer, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Icon_Navegador))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jp_HomeScreenIconsLayout.setVerticalGroup(
            jp_HomeScreenIconsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_HomeScreenIconsLayout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(Icon_Navegador, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Icon_FileExplorer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Icon_Mord, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Icon_Imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Icon_Calendario, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Icon_CDM, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Icon_MP3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Icon_Msjr, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Icon_RedSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(Icon_NetBeans, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        jp_HomeScreenBackGround.add(jp_HomeScreenIcons, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, -1, 820));

        jp_TaskBar.setBackground(new java.awt.Color(51, 51, 51));

        UselessButton.setOpaque(true);

        jb_UsuariosSettings.setBackground(new java.awt.Color(51, 51, 51));
        jb_UsuariosSettings.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jb_UsuariosSettings.setForeground(new java.awt.Color(204, 204, 204));
        jb_UsuariosSettings.setText("Usuarios Settings");
        jb_UsuariosSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_UsuariosSettingsMouseClicked(evt);
            }
        });

        jb_SessionShutter.setBackground(new java.awt.Color(51, 51, 51));
        jb_SessionShutter.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jb_SessionShutter.setForeground(new java.awt.Color(204, 204, 204));
        jb_SessionShutter.setText("Session Shutter");
        jb_SessionShutter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_SessionShutterMouseClicked(evt);
            }
        });

        jl_HoraTaskBar.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jl_HoraTaskBar.setForeground(new java.awt.Color(255, 255, 255));
        jl_HoraTaskBar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_HoraTaskBar.setText("00:00 AM");

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("20/09/2023");

        javax.swing.GroupLayout jp_TaskBarLayout = new javax.swing.GroupLayout(jp_TaskBar);
        jp_TaskBar.setLayout(jp_TaskBarLayout);
        jp_TaskBarLayout.setHorizontalGroup(
            jp_TaskBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_TaskBarLayout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(UselessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(jb_UsuariosSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_SessionShutter, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 649, Short.MAX_VALUE)
                .addComponent(jl_HoraTaskBar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jp_TaskBarLayout.setVerticalGroup(
            jp_TaskBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_TaskBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_TaskBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_UsuariosSettings)
                    .addComponent(jb_SessionShutter)
                    .addComponent(jl_HoraTaskBar)
                    .addComponent(jLabel1)
                    .addComponent(UselessButton))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jp_HomeScreenBackGround.add(jp_TaskBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 840, 1560, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_LockScreenBackGround, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jp_HomeScreenBackGround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_LockScreenBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jp_HomeScreenBackGround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jp_LockScreenBackGroundKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jp_LockScreenBackGroundKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() >= 0){
            InitSesh();
        }
        
    }//GEN-LAST:event_jp_LockScreenBackGroundKeyPressed

    private void jl_LockScreenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jl_LockScreenKeyPressed
        // TODO add your handling code here:
        System.out.println(evt.getKeyCode());
        if(evt.getKeyCode()==13){
            //System.out.println("hola si preciono");
            InitSesh();
        }
    }//GEN-LAST:event_jl_LockScreenKeyPressed

    private void jl_LockScreenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_LockScreenMouseClicked
        // TODO add your handling code here:
        InitSesh();
    }//GEN-LAST:event_jl_LockScreenMouseClicked

    private void jb_ShutDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_ShutDownActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jb_ShutDownActionPerformed

    private void jb_OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_OkActionPerformed
        // TODO add your handling code here:
        //comparar los usuarios y la data ingresada
        boolean valid = false;
        for (int i = 0; i < usuarios.size(); i++) {
            String tempUser = usuarios.get(i).getUserName();
            String tempPass = usuarios.get(i).getPassword();
            
            if(jt_UserName.getText().equalsIgnoreCase(tempUser) && jt_password.getText().equalsIgnoreCase(tempPass)){
                Act_Usuario = usuarios.get(i);
                jl_CurrentUser.setText(Act_Usuario.getUserName());
                valid = true;
            }
            
        }//end for
        
        
        if(valid){
            //hacer esto solo si el usuario y pass coinciden
            jd_LogIn.dispose();
            jp_LockScreenBackGround.setVisible(false);
            jl_LockScreen.setVisible(false);
            jp_HomeScreenBackGround.setSize(jp_LockScreenBackGround.getSize());
            jb_SessionShutter.setVisible(true);
            if(Act_Usuario.getUserName().equals("Admin237")){
                jb_UsuariosSettings.setVisible(true);
            }else{
                jb_UsuariosSettings.setVisible(false);
            }
        }else{
            JOptionPane.showMessageDialog(jd_LogIn, "Username y password no concuerdan");
        }
    }//GEN-LAST:event_jb_OkActionPerformed

    private void jl_LockScreenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jl_LockScreenKeyReleased
        System.out.println(evt.getKeyCode());        
        
    }//GEN-LAST:event_jl_LockScreenKeyReleased

    private void jl_LockScreenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jl_LockScreenKeyTyped
        System.out.println(evt.getKeyCode());
        if(evt.getKeyCode()==13){
            System.out.println("hola si preciono");
            InitSesh();
        }
    }//GEN-LAST:event_jl_LockScreenKeyTyped

    private void Icon_MordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Icon_MordMouseClicked
        // TODO add your handling code here:
        jd_Mord.pack();
        jd_Mord.setModal(true);
        jd_Mord.setLocationRelativeTo(this);
        jd_Mord.setVisible(true);
        TP_PaginaMord.setText("");
    }//GEN-LAST:event_Icon_MordMouseClicked

    private void cb_Tama√±oMordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_Tama√±oMordActionPerformed
        // TODO add your handling code here:
        //CAMBIAR EL TAMALO DE LETRA DEL MORD ACA
        StyleConstants.setFontSize(estiloMord, Integer.parseInt(cb_Tama√±oMord.getSelectedItem().toString()));
        docMord.setCharacterAttributes(TP_PaginaMord.getSelectionStart(),TP_PaginaMord.getSelectionEnd() - TP_PaginaMord.getSelectionStart(),
                TP_PaginaMord.getStyle("miEstilo"),true);
    }//GEN-LAST:event_cb_Tama√±oMordActionPerformed

    private void cb_FuenteMordItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_FuenteMordItemStateChanged
        // TODO add your handling code here:
        //PROGRAMAR EL SETFONTFAMILY DEL MORD ACA
         StyleConstants.setFontFamily(estiloMord, cb_FuenteMord.getSelectedItem().toString());
        //StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tama√±o.getSelectedItem().toString()));
        docMord.setCharacterAttributes(TP_PaginaMord.getSelectionStart(),
                TP_PaginaMord.getSelectionEnd() - TP_PaginaMord.getSelectionStart(),
                TP_PaginaMord.getStyle("miEstilo"),
                true);
    }//GEN-LAST:event_cb_FuenteMordItemStateChanged

    private void jp_ColorLetraMordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_ColorLetraMordMouseClicked
        // TODO add your handling code here:
        //CAMBIAR EL COLOR DE LA LETRA ACA (FOREGROUND)
        try {
            StyleConstants.setForeground(estiloMord,JColorChooser.showDialog(jd_Mord,"Seleccione Color", Color.red));
            docMord.setCharacterAttributes(TP_PaginaMord.getSelectionStart(), TP_PaginaMord.getSelectionEnd() - TP_PaginaMord.getSelectionStart(), 
                    TP_PaginaMord.getStyle("miEstilo"),true);
            jp_ColorLetraMord.setBackground(StyleConstants.getForeground(estiloMord));
            
            jp_LastColor8.setBackground(jp_LastColor7.getBackground());
            jp_LastColor7.setBackground(jp_LastColor6.getBackground());
            jp_LastColor6.setBackground(jp_LastColor5.getBackground());
            jp_LastColor5.setBackground(jp_LastColor4.getBackground());
            jp_LastColor4.setBackground(jp_LastColor3.getBackground());
            jp_LastColor3.setBackground(jp_LastColor2.getBackground());
            jp_LastColor2.setBackground(jp_LastColor1.getBackground());
            jp_LastColor1.setBackground(jp_ColorLetraMord.getBackground());
            
        } catch (Exception ex) {
        }
        
        
    }//GEN-LAST:event_jp_ColorLetraMordMouseClicked

    private void jl_ResaltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_ResaltarMouseClicked
        // TODO add your handling code here:
        //SUBRAYAR EL TEXTO EN EL MORD
        try {
            StyleConstants.setBackground(estiloMord,JColorChooser.showDialog(jd_Mord,"Seleccione Color", Color.red));
            docMord.setCharacterAttributes(TP_PaginaMord.getSelectionStart(), TP_PaginaMord.getSelectionEnd() - TP_PaginaMord.getSelectionStart(), 
                    TP_PaginaMord.getStyle("miEstilo"),true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jl_ResaltarMouseClicked

    private void jl_BoldMordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_BoldMordMouseClicked
        // TODO add your handling code here:
        //BOLD BUTTON PROGRAMMING
        if(StyleConstants.isBold(estiloMord)){
           try {
            StyleConstants.setBold(estiloMord, false);
            docMord.setCharacterAttributes(TP_PaginaMord.getSelectionStart(),TP_PaginaMord.getSelectionEnd() - TP_PaginaMord.getSelectionStart(),
                    TP_PaginaMord.getStyle("miEstilo"),true);
            } catch (Exception ex) {
            }//fin catch 
        }else{
            try {
                StyleConstants.setBold(estiloMord, true);
                docMord.setCharacterAttributes(TP_PaginaMord.getSelectionStart(),TP_PaginaMord.getSelectionEnd() - TP_PaginaMord.getSelectionStart(),
                        TP_PaginaMord.getStyle("miEstilo"),true);
            } catch (Exception ex) {
            }
        }//fin if
    }//GEN-LAST:event_jl_BoldMordMouseClicked

    private void jl_ItalixMordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_ItalixMordMouseClicked
        // TODO add your handling code here:
        //ITALIC BUTTON PROG
        if(StyleConstants.isItalic(estiloMord)){
           try {
            StyleConstants.setItalic(estiloMord, false);
            docMord.setCharacterAttributes(TP_PaginaMord.getSelectionStart(),TP_PaginaMord.getSelectionEnd() - TP_PaginaMord.getSelectionStart(),
                    TP_PaginaMord.getStyle("miEstilo"),true);
            } catch (Exception ex) {
            }//fin catch 
        }else{
            try {
                StyleConstants.setItalic(estiloMord, true);
                docMord.setCharacterAttributes(TP_PaginaMord.getSelectionStart(),TP_PaginaMord.getSelectionEnd() - TP_PaginaMord.getSelectionStart(),
                        TP_PaginaMord.getStyle("miEstilo"),true);
            } catch (Exception ex) {
            }
        }//fin if
    }//GEN-LAST:event_jl_ItalixMordMouseClicked

    private void jl_UnderlineMordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_UnderlineMordMouseClicked
        // TODO add your handling code here:
        //SUBRALLAR BUTTON P
        if(StyleConstants.isUnderline(estiloMord)){
           try {
            StyleConstants.setUnderline(estiloMord, false);
            docMord.setCharacterAttributes(TP_PaginaMord.getSelectionStart(),TP_PaginaMord.getSelectionEnd() - TP_PaginaMord.getSelectionStart(),
                    TP_PaginaMord.getStyle("miEstilo"),true);
            } catch (Exception ex) {
            }//fin catch 
        }else{
            try {
                StyleConstants.setUnderline(estiloMord, true);
                docMord.setCharacterAttributes(TP_PaginaMord.getSelectionStart(),TP_PaginaMord.getSelectionEnd() - TP_PaginaMord.getSelectionStart(),
                        TP_PaginaMord.getStyle("miEstilo"),true);
            } catch (Exception ex) {
            }
        }//fin if
    }//GEN-LAST:event_jl_UnderlineMordMouseClicked

    private void jl_ArchivoMordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_ArchivoMordMouseClicked
        // TODO add your handling code here:
        //abrir el pop up menu de MOrd
        jpm_MordArchivo.show(evt.getComponent(),evt.getX(), evt.getY());
    }//GEN-LAST:event_jl_ArchivoMordMouseClicked

    private void jm_MordGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_MordGuardarActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filtro = 
                    new FileNameExtensionFilter(
                            "Diego Docs", "dmv");
         jfc.setFileFilter(filtro); 
        int seleccion = jfc.showSaveDialog(jd_Mord); 
       
        FileOutputStream fw = null;
        ObjectOutputStream bw = null;
        if (seleccion == JFileChooser.APPROVE_OPTION) {
             try {
                 
                  File fichero=null;
                if (jfc.getFileFilter().getDescription().equals(
                        "Diego Docs")) {
                    fichero = 
                        new File(jfc.getSelectedFile().getPath()+".dmv");
                }else{
                    fichero = jfc.getSelectedFile();
                }   
                
                fw = new FileOutputStream(fichero);
                bw = new ObjectOutputStream(fw);
                Documento d=new Documento(TP_PaginaMord,docMord,estiloMord);
                bw.writeObject(d);
                bw.flush();
                
                JOptionPane.showMessageDialog(jd_Mord, 
                        "Archivo guardado exitosamente");  
                
            } catch (Exception e) {
                e.printStackTrace();
            }
                               
        }//fin if
        try {
                    bw.close();
                    fw.close();
                } catch (IOException ex) {
           } 
    }//GEN-LAST:event_jm_MordGuardarActionPerformed

    private void jm_MordAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_MordAbrirActionPerformed
        // TODO add your handling code here:
        File fichero = null;
        FileInputStream entrada = null;
        ObjectInputStream objeto = null;        
        try {
            JFileChooser jfc = new JFileChooser();
            FileNameExtensionFilter filtro = 
                    new FileNameExtensionFilter(
                            "Diego Docs", "dmv");
            jfc.setFileFilter(filtro);                   
            int seleccion = jfc.showOpenDialog(jd_Mord);
            if (seleccion == JFileChooser.APPROVE_OPTION)
            {
               fichero = jfc.getSelectedFile();
               entrada = new FileInputStream(fichero);
               objeto = new ObjectInputStream(entrada);              
               TP_PaginaMord.setText("");  
               Documento temp=(Documento)objeto.readObject();
               TP_PaginaMord.setText( ((Documento)  temp  ).getPanel().getText() );
               TP_PaginaMord.setDocument( ((Documento)temp  ).getDoc()   ) ;
                
               
               
            } //fin if
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            objeto.close();
            entrada.close();
        } catch (IOException ex) {
        }
    }//GEN-LAST:event_jm_MordAbrirActionPerformed

    private void jt_UserNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_UserNameMouseClicked
        // user name text field
        if(jt_UserName.getText().equalsIgnoreCase("Ingrese su UserName:")){
            jt_UserName.setText("");
            jt_UserName.setForeground(Color.BLACK);
        }
        if(jt_password.getText().isEmpty()){
            jt_password.setText("**********");
            jt_password.setForeground(Color.gray);
        }
    }//GEN-LAST:event_jt_UserNameMouseClicked

    private void jt_passwordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_passwordMouseClicked
        // password text field
        if(jt_password.getText().equals("**********")){
            jt_password.setText("");
            jt_password.setForeground(Color.BLACK);
        }
        if(jt_UserName.getText().isEmpty()){
           jt_UserName.setText("Ingrese su UserName:");
           jt_UserName.setForeground(Color.gray);
        }
    }//GEN-LAST:event_jt_passwordMouseClicked

    private void jb_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cancelarActionPerformed
        // TODO add your handling code here:
        jd_LogIn.dispose();
    }//GEN-LAST:event_jb_cancelarActionPerformed

    private void jm_AdminPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_AdminPassActionPerformed
        // TODO add your handling code here:
        //llenar con datos de admin las cajas de log in
        jt_UserName.setText(admin.getUserName());
        jt_password.setText(admin.getPassword());
    }//GEN-LAST:event_jm_AdminPassActionPerformed

    private void jb_opcionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_opcionesMouseClicked
        // TODO add your handling code here:
        jpm_LogInOpciones.show(evt.getComponent(),evt.getX(), evt.getY());
    }//GEN-LAST:event_jb_opcionesMouseClicked

    private void jm_LimpiarCajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_LimpiarCajasActionPerformed
        // TODO add your handling code here:
        jt_UserName.setText("");
        jt_password.setText("");
    }//GEN-LAST:event_jm_LimpiarCajasActionPerformed

    private void Icon_ImagenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Icon_ImagenMouseClicked
        // TODO add your handling code here:
        //mostrar jd de visor de imagenes aca
        jd_VisorImagenes.pack();
        jd_VisorImagenes.setModal(true);
        jd_VisorImagenes.setLocationRelativeTo(this);
        jd_VisorImagenes.setVisible(true);
    }//GEN-LAST:event_Icon_ImagenMouseClicked

    private void jb_izquierdaVIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_izquierdaVIActionPerformed
        // TODO add your handling code here:
        //code de "mover" la imagen a la iquierda aca
        if(cont == 1){
            cont = 4;
        }//fin de ver si esta en la imagen de mas izquierda
        cont--;
        jl_VisorPrincipal.setIcon(Imagen[cont]);
    }//GEN-LAST:event_jb_izquierdaVIActionPerformed

    private void jb_derechaVIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_derechaVIActionPerformed
        // TODO add your handling code here:
        //code de "mover" la imagen a la derecha aca
        if(cont == 3){
            cont = 0;
        }//fin de ver si esta en la imagen de mas derecha
        cont++;
        jl_VisorPrincipal.setIcon(Imagen[cont]);
    }//GEN-LAST:event_jb_derechaVIActionPerformed

    private void Icon_CalendarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Icon_CalendarioMouseClicked
        // TODO add your handling code here:
        //abrir el calendario/planner
        jd_Calendario.pack();
        jd_Calendario.setModal(true);
        jd_Calendario.setLocationRelativeTo(this);
        jd_Calendario.setVisible(true);
    }//GEN-LAST:event_Icon_CalendarioMouseClicked

    private void jb_ProcesarRecordatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_ProcesarRecordatorioActionPerformed
        // TODO add your handling code here:
        //pasar el recordatorio a la tabla, pero primero ver si es tarea o evento para pedirle lo correspondiente de cada uno
        if(jrb_EventoCalendario.isSelected()){
            //pedirle lo necesario para el evento (la hora de inicio y fin del evento) : hacerlo string para no complicarse y ponerlo en notas
            String horarioInicio = JOptionPane.showInputDialog("Ingrese la hora de inicio: (hh:mm)");
            String horarioFin = JOptionPane.showInputDialog("Ingrese a que hora termina: (hh:mm)");
            String HorarioFinal = horarioInicio+" -> "+horarioFin;
            
            
            
            //llenar la tabla
            Date fechaRec = jc_FechaRecordatorio.getDate();
            String Titulo = jt_TituloRecordatorio.getText();
            DefaultTableModel modelo = (DefaultTableModel)jt_Recordatorios.getModel();
            Object [] fila = {fechaRec.toString(), Titulo, HorarioFinal};
            modelo.addRow(fila);
            jt_Recordatorios.setModel(modelo);
            
        }else{
           //si nada esta seleccionado asumir que es tarea (porque si xd) 
           //pedirle las notas y detalles de la tarea para ponerlo en el field "notas xd"
           String Notas = JOptionPane.showInputDialog("Ingrese las notas y contenido de la tarea: ");
           
           //setear la hora del recordatorio si es hoy o solo mostrar el logo etc.
           
           //llenar la tabla con el recordatotio
           Date fechaRec = jc_FechaRecordatorio.getDate();
           String Titulo = jt_TituloRecordatorio.getText();
           DefaultTableModel modelo = (DefaultTableModel)jt_Recordatorios.getModel();
           Object [] fila = {fechaRec.toString(), Titulo, Notas};
           modelo.addRow(fila);
           jt_Recordatorios.setModel(modelo);
           
        }//fin if
        jt_TituloRecordatorio.setText("");
        //setear la hora para el recordatorio si la fecha es igual a la de hoy o solo mostrar el recordatorio en homescreen si es un recordatorio que esta en el futuro de todas formas
        String horaRec = cb_HorasRecordatorio.getSelectedItem().toString();
        String minutosRec = cb_MinutosRecordatorio.getSelectedItem().toString();
        String secsRec = cb_SegundosRecordatorio.getSelectedItem().toString();
        String RecTime = horaRec+":"+minutosRec+":"+secsRec;
        Date h = new Date();
        DateFormat df = new SimpleDateFormat("hh:mm:ss");
        String atS = df.format(h);
        System.out.println(atS);
        //iniciar el thread
        HiloRecordatorio rec = new HiloRecordatorio(jl_RecordatorioActivo, RecTime);
        Thread record = new Thread(rec);
        record.start();
    }//GEN-LAST:event_jb_ProcesarRecordatorioActionPerformed

    private void Icon_FileExplorerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Icon_FileExplorerMouseClicked
        // TODO add your handling code here:
        //ver si el modelo del arbol es diferente al original para reiniciar el arbol
            //JT_FileNavigator.setModel(modeloBase);
            DefaultTreeModel m = (DefaultTreeModel) JT_FileNavigator.getModel();
            DefaultMutableTreeNode Z = (DefaultMutableTreeNode) m.getRoot();
            DefaultMutableTreeNode arch;
            for (int i = 0; i < 4; i++) {
                switch (i) {
                    case 0:{
                        //llenar musica
                        arch = new DefaultMutableTreeNode(torDance);
                        DefaultMutableTreeNode arch1 = new DefaultMutableTreeNode(sans);
                        DefaultMutableTreeNode arch2 = new DefaultMutableTreeNode(pollito);
                        ((DefaultMutableTreeNode) Z.getChildAt(i)).add(arch);
                        ((DefaultMutableTreeNode) Z.getChildAt(i)).add(arch1);
                        ((DefaultMutableTreeNode) Z.getChildAt(i)).add(arch2);
                    }//fin case 0
                    break;
                    case 1:{
                        //llenar imagenes
                        arch = new DefaultMutableTreeNode(mordida);
                        DefaultMutableTreeNode arch1 = new DefaultMutableTreeNode(grad);
                        DefaultMutableTreeNode arch2 = new DefaultMutableTreeNode(pfp);
                        ((DefaultMutableTreeNode) Z.getChildAt(i)).add(arch);
                        ((DefaultMutableTreeNode) Z.getChildAt(i)).add(arch1);
                        ((DefaultMutableTreeNode) Z.getChildAt(i)).add(arch2);
                    }//fin case
                    break;
                    case 2:{
                        //llenar documentos
                        arch = new DefaultMutableTreeNode(tarj);
                        DefaultMutableTreeNode arch1 = new DefaultMutableTreeNode(acta);
                        ((DefaultMutableTreeNode) Z.getChildAt(i)).add(arch);
                        ((DefaultMutableTreeNode) Z.getChildAt(i)).add(arch1);
                    }//fin case
                    break;
                    case 3:{
                        //llenar otros
                        arch = new DefaultMutableTreeNode(receta);
                        ((DefaultMutableTreeNode) Z.getChildAt(i)).add(arch);
                    }//fin case
                    break;
                }//fin switch
            }//fin for
            m.reload();
            JT_FileNavigator.setModel(m);
        
        jd_FileNavegator.pack();
        jd_FileNavegator.setModal(true);
        jd_FileNavegator.setLocationRelativeTo(this);
        jd_FileNavegator.setVisible(true);
        
    }//GEN-LAST:event_Icon_FileExplorerMouseClicked

    private void jb_SessionShutterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_SessionShutterMouseClicked
        // TODO add your handling code here:
        jpm_SessionShutter.show(jb_SessionShutter, evt.getX(), evt.getY());
    }//GEN-LAST:event_jb_SessionShutterMouseClicked

    private void jm_LockComputerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_LockComputerActionPerformed
        // TODO add your handling code here:
        jp_LockScreenBackGround.setVisible(true);
        jl_LockScreen.setVisible(true);
        jb_SessionShutter.setVisible(false);
        jb_UsuariosSettings.setVisible(false);
    }//GEN-LAST:event_jm_LockComputerActionPerformed

    private void jb_UsuariosSettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_UsuariosSettingsMouseClicked
        // TODO add your handling code here:
        jpm_UsuariosSettingsAdmin.show(jb_UsuariosSettings, evt.getX(), evt.getY());
    }//GEN-LAST:event_jb_UsuariosSettingsMouseClicked

    private void jb_AgregarCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_AgregarCancionActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser("./");
            //filtra solo los txt.
            FileNameExtensionFilter filtro =new FileNameExtensionFilter("Archivos WAV", "wav");
            //aca se aplican los filtros. una forma es con setFileFilter, la otra es: addChoosableFileFilter
            //set lo deja por defecto este filtro (el de wav), sin set deja la opcion de "Todos los archivos"
            jfc.setFileFilter(filtro);   
            //abrir el fileChooser
            int seleccion = jfc.showOpenDialog(jd_MusicPlayer);
            if (seleccion == JFileChooser.APPROVE_OPTION)
            {
                String SongPath = jfc.getSelectedFile().getPath();
                String SongName = jfc.getSelectedFile().getName();
                WAVpaths.add(SongPath);
               
                DefaultTableModel modelo = (DefaultTableModel) jt_Playlist.getModel();
                Object [] songnames = {SongName};
                modelo.addRow(songnames);
                jt_Playlist.setModel(modelo);
                
            }
    }//GEN-LAST:event_jb_AgregarCancionActionPerformed

    private void Icon_MP3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Icon_MP3MouseClicked
        // TODO add your handling code here:
        jd_MusicPlayer.pack();
        jd_MusicPlayer.setModal(true);
        jd_MusicPlayer.setLocationRelativeTo(this);
        jd_MusicPlayer.setVisible(true);
    }//GEN-LAST:event_Icon_MP3MouseClicked

    private void jb_PlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_PlayActionPerformed
        // TODO add your handling code here:
        if(IsSongPlaying == false){
            if(jt_Playlist.getSelectedRow() >= 0){
                IsSongPlaying = true;
                jb_Stop.setVisible(false);
                //asignar el index del arraylist de songpaths
                int SongIndex = jt_Playlist.getSelectedRow();
                String SongPath = WAVpaths.get(SongIndex);
                repro = new HiloAudio(SongPath);
                HiloAudio = new Thread(repro);
                HiloAudio.start();

            }else{
                JOptionPane.showMessageDialog(jd_MusicPlayer, "Primero escoga una cancion de la PlayList para escuchar.");
            }
        }else{
            JOptionPane.showMessageDialog(jd_MusicPlayer, "No se puede escuchar 2 canciones al mismo tiempo...");
        }
    }//GEN-LAST:event_jb_PlayActionPerformed

    private void jb_StopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_StopActionPerformed
        // TODO add your handling code here:
        if(Paused == false){
            HiloAudio.stop();  
        }else{
            repro.pausarReproducir();
            HiloAudio.stop();
            jb_Pause.setText("PAUSE");
        }
        IsSongPlaying = false;
    }//GEN-LAST:event_jb_StopActionPerformed

    private void jb_PauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_PauseActionPerformed
        // TODO add your handling code here:
        repro.pausarReproducir();
        if(jb_Pause.getText().equalsIgnoreCase("Pause")){
            jb_Pause.setText("RESUME");
            //y decirle a la bandera que si esta pausada la cancion
            Paused = true;
            //ya que aparentemente es un requerimineto pausar la cancion antes de pararla para que todo no se muera
            //Enable el jbutton de stop solo cuando este pausada la cancion
            jb_Stop.setVisible(true);
        }else if(jb_Pause.getText().equalsIgnoreCase("RESUME")){
            jb_Pause.setText("PAUSE");
            //decirle a la bandera que no esta pausada
            Paused = false;
            jb_Stop.setVisible(false);
        }
    }//GEN-LAST:event_jb_PauseActionPerformed

    private void JT_FileNavigatorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JT_FileNavigatorMouseClicked
        // TODO add your handling code here:
        if(evt.isMetaDown()){
            jpm_JTreeMenu.show(JT_FileNavigator, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_JT_FileNavigatorMouseClicked

    private void jm_OrganizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_OrganizarActionPerformed
        // TODO add your handling code here:
        //shuffle todas las carpetas principales dentro de otra (musica, imagenes, docs, otros)
        DefaultTreeModel m = (DefaultTreeModel) JT_FileNavigator.getModel();
        DefaultMutableTreeNode Z = (DefaultMutableTreeNode) m.getRoot();
        RandomizarTree(Z);
        ((DefaultTreeModel) JT_FileNavigator.getModel()).reload();
    }//GEN-LAST:event_jm_OrganizarActionPerformed

    private void Icon_CDMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Icon_CDMMouseClicked
        // TODO add your handling code here:
        //abrir jd del cmd
        jd_CMD.pack();
        jd_CMD.setModal(true);
        jd_CMD.setLocationRelativeTo(this);
        jd_CMD.setVisible(true);
    }//GEN-LAST:event_Icon_CDMMouseClicked

    private void jm_OrdenarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_OrdenarNombreActionPerformed
        // TODO add your handling code here:
        //ordenar capreta seleccionada por nombre
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) JT_FileNavigator.getLastSelectedPathComponent();
            if (selectedNode != null) {
                OrdenarAlpha(selectedNode);
                ((DefaultTreeModel) JT_FileNavigator.getModel()).reload(selectedNode);
            }else{
                JOptionPane.showMessageDialog(jd_FileNavegator, "Primero escoja una carpeta con cosas adentro");
            }
    }//GEN-LAST:event_jm_OrdenarNombreActionPerformed

    private void jm_OrdenarFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_OrdenarFechaActionPerformed
        // TODO add your handling code here:
        //ordenar por fecha
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) JT_FileNavigator.getLastSelectedPathComponent();
            if (selectedNode != null) {
                OrdenarFecha(selectedNode);
                ((DefaultTreeModel) JT_FileNavigator.getModel()).reload(selectedNode);
            }else{
                JOptionPane.showMessageDialog(jd_FileNavegator, "Primero escoja una carpeta con cosas adentro");
            }
    }//GEN-LAST:event_jm_OrdenarFechaActionPerformed

    private void jm_OrdenarTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_OrdenarTipoActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) JT_FileNavigator.getLastSelectedPathComponent();
            if (selectedNode != null) {
                OrdenarTipo(selectedNode);
                ((DefaultTreeModel) JT_FileNavigator.getModel()).reload(selectedNode);
            }else{
                JOptionPane.showMessageDialog(jd_FileNavegator, "Primero escoja una carpeta con cosas adentro");
            }
    }//GEN-LAST:event_jm_OrdenarTipoActionPerformed

    private void jm_OrdenarTama√±oActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_OrdenarTama√±oActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) JT_FileNavigator.getLastSelectedPathComponent();
            if (selectedNode != null) {
                OrdenarTama√±o(selectedNode);
                ((DefaultTreeModel) JT_FileNavigator.getModel()).reload(selectedNode);
            }else{
                JOptionPane.showMessageDialog(jd_FileNavegator, "Primero escoja una carpeta con cosas adentro");
            }
    }//GEN-LAST:event_jm_OrdenarTama√±oActionPerformed

    private void jm_AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_AgregarActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) JT_FileNavigator.getLastSelectedPathComponent();
        if(selectedNode != null){
            DefaultTreeModel m = (DefaultTreeModel) JT_FileNavigator.getModel();
            //ver si quiere una carpeta o un archivo
            int op = JOptionPane.showConfirmDialog(jd_FileNavegator, "Desea agregar una Carpeta?");
            if(op == 0){
                //agregar la carpeta
                DefaultMutableTreeNode n = new DefaultMutableTreeNode("Nueva Carpeta");
                DefaultMutableTreeNode p = new DefaultMutableTreeNode("Nuevo Archivo");
                n.add(p);
                selectedNode.add(n);
                m.reload();
            }else if(op == 1){
                int op2 = JOptionPane.showConfirmDialog(jd_FileNavegator, "Desea agregar un archivo?");
                if(op2 == 0){
                  DefaultMutableTreeNode n = new DefaultMutableTreeNode( new Archivo("Nuevo Archivo", new Date(), "xd", "0k"));  
                  selectedNode.add(n);
                  m.reload();
                }else if(op2 == 1){
                    JOptionPane.showMessageDialog(jd_FileNavegator, "Tonss pa que escoges esta opcion xdddd");
                }
            }
            
        }else{
            JOptionPane.showMessageDialog(jd_FileNavegator, "Primero escoja una carpeta con cosas adentro");
        }
        
    }//GEN-LAST:event_jm_AgregarActionPerformed

    private void jm_CambiarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_CambiarNombreActionPerformed
        // TODO add your handling code here:
        DefaultTreeModel m = (DefaultTreeModel) JT_FileNavigator.getModel();
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) JT_FileNavigator.getLastSelectedPathComponent();
        if(selectedNode != null){
            Object x = selectedNode.getUserObject();
            if (x instanceof Archivo){
                String nombre = JOptionPane.showInputDialog("Ingrese el nuevo nombre:");
                ((Archivo)(selectedNode.getUserObject())).setNombre(nombre);
            }else{
                String nombre = JOptionPane.showInputDialog("Ingrese el nuevo nombre:");
                DefaultMutableTreeNode nc = new DefaultMutableTreeNode(nombre);
                System.out.println("test 2");
                nc.add(selectedNode);
                System.out.println("test");
                DefaultMutableTreeNode Z = (DefaultMutableTreeNode) m.getRoot();
                Z.remove(selectedNode);
                Z.add(nc);
                m.reload();
            }
        }else{
            JOptionPane.showMessageDialog(jd_FileNavegator, "Primero escoja el elemento");
        }
    }//GEN-LAST:event_jm_CambiarNombreActionPerformed

    private void jb_SendTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_SendTextActionPerformed
        // TODO add your handling code here:
        String chat = TP_GroupChat.getText();
        TP_GroupChat.setText("");
        String ActGroupchat = chat+"\n"+Act_Usuario.getUserName()+": "+TP_MsgKeyBoard.getText()+";";
        TP_GroupChat.setText(ActGroupchat);
        TP_MsgKeyBoard.setText("");
        //mandar el current Groupchat al txt... osea con el file writer y todo eso xd
        FileWriter fw = null;
        BufferedWriter bw = null;
        try {
            //siempre se sobre escribe el archivo
            fw = new FileWriter("./Mensajero.txt", false);
            bw = new BufferedWriter(fw);
            bw.write(ActGroupchat);
            bw.flush();
        } catch (Exception ex) {
        }
        try {
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jb_SendTextActionPerformed

    private void Icon_RedSocialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Icon_RedSocialMouseClicked
        // TODO add your handling code here:
        jd_Meta.pack();
        jd_Meta.setModal(true);
        jd_Meta.setLocationRelativeTo(this);
        jd_Meta.setVisible(true);
    }//GEN-LAST:event_Icon_RedSocialMouseClicked

    private void Icon_MsjrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Icon_MsjrMouseClicked
        // TODO add your handling code here:
        //llenar el groupchat si ya hay convo, osea hacer el get file con el bufferreader y todo ... maten-
        TP_GroupChat.setText("");
            try {
                File archivo = new File("Mensajero.txt");
                Scanner sc = new Scanner(archivo);
                sc.useDelimiter(";");
                String OldGC = "";
                while (sc.hasNext()) {
                    OldGC += sc.next();
                }
                TP_GroupChat.setText(OldGC);
                sc.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            Scanner sc = new Scanner(System.in);
            sc.close();
        
        
        //abrir el dialog
        jd_Mensajero.pack();
        jd_Mensajero.setModal(true);
        jd_Mensajero.setLocationRelativeTo(this);
        jd_Mensajero.setVisible(true);
        
    }//GEN-LAST:event_Icon_MsjrMouseClicked

    private void Icon_NetBeansMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Icon_NetBeansMouseClicked
        // TODO add your handling code here:
        jd_NetBeans.pack();
        jd_NetBeans.setModal(true);
        jd_NetBeans.setLocationRelativeTo(this);
        jd_NetBeans.setVisible(true);
    }//GEN-LAST:event_Icon_NetBeansMouseClicked

    private void jb_AgregarUsuarioNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_AgregarUsuarioNuevoActionPerformed
        // TODO add your handling code here:
        String Name = jt_NombreNewUser.getText();
        String pass = jt_ContraNewUser.getText();
        String conpass = jt_ConfirmContraNewUser.getText();
        
        if(pass.equals(conpass)){
            Usuario NU = new Usuario(Name, pass);
            usuarios.add(NU);
            //agregar el Usuario al txt
            FileWriter fw = null;
            BufferedWriter bw = null;
            try {
                //siempre se sobre escribe el archivo
                //formato del parseo sera: NombreUsuario;Contrase√±a;NombreUsuario;Contrase√±a
                fw = new FileWriter("./Usuarios.txt", false);
                bw = new BufferedWriter(fw);
                for (Usuario u : usuarios) {
                    bw.write(u.getUserName()+";");
                    bw.write(u.getPassword()+";");
                }
                bw.flush();
            } catch (Exception ex) {
            }
            try {
                bw.close();
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            JOptionPane.showMessageDialog(jd_AgregarUsuario, "Usuario Creado Exitosamente!");
            jd_AgregarUsuario.dispose();
        }else{
            JOptionPane.showMessageDialog(jd_AgregarUsuario, "Contrase√±a y Contrasela confirmada no coinciden \nIntentelo de Nuevo.");
            jt_ContraNewUser.setText("");
            jt_ConfirmContraNewUser.setText("");
        }
    }//GEN-LAST:event_jb_AgregarUsuarioNuevoActionPerformed

    private void jm_AgregarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_AgregarUsuarioActionPerformed
        // TODO add your handling code here:
        jd_AgregarUsuario.pack();
        jd_AgregarUsuario.setModal(true);
        jd_AgregarUsuario.setLocationRelativeTo(this);
        jd_AgregarUsuario.setVisible(true);
    }//GEN-LAST:event_jm_AgregarUsuarioActionPerformed

    private void jm_EliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_EliminarUsuarioActionPerformed
        // TODO add your handling code here:
        jd_EliminarUsuarios.pack();
        jd_EliminarUsuarios .setModal(true);
        jd_EliminarUsuarios.setLocationRelativeTo(this);
        jd_EliminarUsuarios.setVisible(true);
    }//GEN-LAST:event_jm_EliminarUsuarioActionPerformed

    private void jb_ElimUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_ElimUserActionPerformed
        // TODO add your handling code here:
        
        if(jt_EliminarUser.getText().equalsIgnoreCase(AdminUserName)){
            JOptionPane.showMessageDialog(jd_EliminarUsuarios, "No se puede eliminar el Usuario Admin xd");
        }else{
            String user = jt_EliminarUser.getText();
            boolean valid = false;
            int pos = -1;
            for (int i = 0; i < usuarios.size(); i++) {
                if(user.equals(usuarios.get(i).getUserName())){
                    valid = true;
                    pos = i;
                }
            }
            if(valid == false){
                JOptionPane.showMessageDialog(jd_EliminarUsuarios, "Usuario no encontrado \nIntentelo de Nuevo");
                jt_EliminarUser.setText("");
            }else{
                usuarios.remove(pos);
                //actualizar el txt
                FileWriter fw = null;
                BufferedWriter bw = null;
                try {
                    //siempre se sobre escribe el archivo
                    //formato del parseo sera: NombreUsuario;Contrase√±a;NombreUsuario;Contrase√±a
                    fw = new FileWriter("./Usuarios.txt", false);
                    bw = new BufferedWriter(fw);
                    for (Usuario u : usuarios) {
                        bw.write(u.getUserName()+";");
                        bw.write(u.getPassword()+";");
                    }
                    bw.flush();
                } catch (Exception ex) {
                }
                try {
                    bw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    fw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(jd_EliminarUsuarios, "USuario Eliminado Exitosamente!");
                jd_EliminarUsuarios.dispose();
            }//fin if
        }//fin else
        
    }//GEN-LAST:event_jb_ElimUserActionPerformed

    private void jm_ChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_ChangePasswordActionPerformed
        // TODO add your handling code here:
        if(Act_Usuario.getUserName().equalsIgnoreCase(AdminUserName)){
            JOptionPane.showMessageDialog(this, "No se le puede cambiar la contrase√±a al Admin sin permisos especiales");
            //esos permisos especiales no existes jaja
        }else{
            for (int i = 0; i < usuarios.size(); i++) {
                if(Act_Usuario.equals(usuarios.get(i))){
                    String neuPass = JOptionPane.showInputDialog("Ingrese la nueva contrase√±a para este usuario:");
                    usuarios.get(i).setPassword(neuPass);
                    //actualizar el txt
                    FileWriter fw = null;
                    BufferedWriter bw = null;
                    try {
                        //siempre se sobre escribe el archivo
                        //formato del parseo sera: NombreUsuario;Contrase√±a;NombreUsuario;Contrase√±a
                        fw = new FileWriter("./Usuarios.txt", false);
                        bw = new BufferedWriter(fw);
                        for (Usuario u : usuarios) {
                            bw.write(u.getUserName()+";");
                            bw.write(u.getPassword()+";");
                        }
                        bw.flush();
                    } catch (Exception ex) {
                    }
                    try {
                        bw.close();
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        fw.close();
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    JOptionPane.showMessageDialog(this, "Contrase√±a Cambiada Exitosamente");
                }//fin if
            }//fin for
        }//fin if externo
    }//GEN-LAST:event_jm_ChangePasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    public void InitSesh(){
        jd_LogIn.pack();
        jd_LogIn.setModal(true);
        jd_LogIn.setLocationRelativeTo(this);
        jd_LogIn.setVisible(true);
    }
    private void RandomizarTree(DefaultMutableTreeNode node) {
        List<Object> Hs = new ArrayList<>();
        int Hcount = node.getChildCount();

        for (int i = 0; i < Hcount; i++) {
            DefaultMutableTreeNode H = (DefaultMutableTreeNode) node.getChildAt(i);
            Hs.add(H.getUserObject());
        }

        Collections.shuffle(Hs);

        for (int i = 0; i < Hcount; i++) {
            DefaultMutableTreeNode HijoNodo = (DefaultMutableTreeNode) node.getChildAt(i);
            HijoNodo.setUserObject(Hs.get(i));
        }
    }//fin organizar
    
    private void OrdenarAlpha(DefaultMutableTreeNode Papa) {
    List<DefaultMutableTreeNode> NodosHijos = new ArrayList<>();
    for (int i = 0; i < Papa.getChildCount(); i++) {
        DefaultMutableTreeNode NodoHijo = (DefaultMutableTreeNode) Papa.getChildAt(i);
        NodosHijos.add(NodoHijo);
    }
    Collections.sort(NodosHijos, (nodo1, nodo2) -> {
        String carp1 = nodo1.getUserObject().toString();
        String carp2 = nodo2.getUserObject().toString();
        return carp1.compareToIgnoreCase(carp2);
    }
    );
    Papa.removeAllChildren();
    for (DefaultMutableTreeNode childNode : NodosHijos) {
        Papa.add(childNode);
    }
    
    }//fin ordenar alphabeticamente
    
    private void OrdenarTipo(DefaultMutableTreeNode Papa) {
    List<DefaultMutableTreeNode> NodosHijos = new ArrayList<>();
    for (int i = 0; i < Papa.getChildCount(); i++) {
        DefaultMutableTreeNode NodoHijo = (DefaultMutableTreeNode) Papa.getChildAt(i);
        NodosHijos.add(NodoHijo);
    }
    Collections.sort(NodosHijos, (nodo1, nodo2) -> {
        String carp1 = ((Archivo)(nodo1.getUserObject())).getTipo();
        String carp2 = ((Archivo)(nodo2.getUserObject())).getTipo();
        return carp1.compareToIgnoreCase(carp2);
    }
    );
    Papa.removeAllChildren();
    for (DefaultMutableTreeNode childNode : NodosHijos) {
        Papa.add(childNode);
    }
    
    }//fin ordenar tipo
    private void OrdenarTama√±o(DefaultMutableTreeNode Papa) {
    List<DefaultMutableTreeNode> NodosHijos = new ArrayList<>();
    for (int i = 0; i < Papa.getChildCount(); i++) {
        DefaultMutableTreeNode NodoHijo = (DefaultMutableTreeNode) Papa.getChildAt(i);
        NodosHijos.add(NodoHijo);
    }
    Collections.sort(NodosHijos, (nodo1, nodo2) -> {
        String carp1 = ((Archivo)(nodo1.getUserObject())).getTama√±o();
        String carp2 = ((Archivo)(nodo2.getUserObject())).getTama√±o();
        return carp1.compareToIgnoreCase(carp2);
    }
    );
    Papa.removeAllChildren();
    for (DefaultMutableTreeNode childNode : NodosHijos) {
        Papa.add(childNode);
    }
    
    }//fin ordenar Tama√±o
    private void OrdenarFecha(DefaultMutableTreeNode Papa) {
    List<DefaultMutableTreeNode> NodosHijos = new ArrayList<>();
    for (int i = 0; i < Papa.getChildCount(); i++) {
        DefaultMutableTreeNode NodoHijo = (DefaultMutableTreeNode) Papa.getChildAt(i);
        NodosHijos.add(NodoHijo);
    }
    Collections.reverse(NodosHijos);
    Papa.removeAllChildren();
    for (DefaultMutableTreeNode childNode : NodosHijos) {
        Papa.add(childNode);
    }
    }//fin organizar por fecha
    
    
    public String AdminUserName = "Admin237";
    public String AdminPass = "1209";
    public Usuario admin = new Usuario(AdminUserName, AdminPass);
    public ArrayList<Usuario> usuarios= new ArrayList();
    
    //word variables
    StyledDocument docMord;
    Style estiloMord;
    
    //visor de imagenes variables
    ImageIcon Imagen[] = new ImageIcon[5];
    int cont = 1;
    
    //Current user
    private Usuario Act_Usuario;
    
    //mp3 arraylist de paths
    ArrayList <String> WAVpaths = new ArrayList();
    Clip c;
    HiloAudio repro;
    Thread HiloAudio;
    //este boolean dice que: false == no esta pausada la current song, pero true == si esta pausada
    boolean Paused = false;
    boolean IsSongPlaying = false;
    
    //cosas pal calendario
    //boolean que dice si hay un recordatorio activo
    boolean Recordatorio = false;
    
    //cosas pal filechooser
    DefaultTreeModel modeloBase;
    //archivos hard pal jtree
    static Archivo torDance = new Archivo("TortureDance", new Date(), "WAV", "2k");
    static Archivo sans = new Archivo("Sans", new Date(), "WAV", "1k");
    static Archivo pollito = new Archivo("ElPollitoPio", new Date(), "WAV", "3k");
    static Archivo pfp = new Archivo("Pfp", new Date(), "img", "5k");
    static Archivo mordida = new Archivo("LaMordidaDel84", new Date(), "img", "3k");
    static Archivo grad = new Archivo("Graduacion2023", new Date(), "img", "5k");
    static Archivo tarj = new Archivo("TarjetaIdentidad", new Date(), "pdf", "1k");
    static Archivo acta = new Archivo("ActaNacimiento", new Date(), "pdf", "1k");
    static Archivo receta = new Archivo("RecetaCangreburger", new Date(), "txt", "6k");
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Icon_CDM;
    private javax.swing.JLabel Icon_Calendario;
    private javax.swing.JLabel Icon_CopiarMord;
    private javax.swing.JLabel Icon_FileExplorer;
    private javax.swing.JLabel Icon_Imagen;
    private javax.swing.JLabel Icon_MP3;
    private javax.swing.JLabel Icon_Mord;
    private javax.swing.JLabel Icon_Msjr;
    private javax.swing.JLabel Icon_Navegador;
    private javax.swing.JLabel Icon_NetBeans;
    private javax.swing.JLabel Icon_PaDelanteMord;
    private javax.swing.JLabel Icon_PaTrasMord;
    private javax.swing.JLabel Icon_PegarMord;
    private javax.swing.JLabel Icon_RedSocial;
    private javax.swing.JLabel Icon_TijeraMord;
    private javax.swing.JLabel JL_PcGroupChat;
    private javax.swing.JMenu JM_ExtraOpciones;
    private javax.swing.JTree JT_FileNavigator;
    private javax.swing.JTree JT_NetBeans;
    private javax.swing.JTextPane TP_CodingSpace;
    private javax.swing.JTextPane TP_GroupChat;
    private javax.swing.JTextPane TP_MsgKeyBoard;
    private javax.swing.JTextPane TP_PaginaMord;
    private javax.swing.JButton UselessButton;
    private javax.swing.ButtonGroup bg_TareaoEvento;
    private javax.swing.JComboBox<String> cb_FuenteMord;
    private javax.swing.JComboBox<String> cb_HorasRecordatorio;
    private javax.swing.JComboBox<String> cb_MinutosRecordatorio;
    private javax.swing.JComboBox<String> cb_SegundosRecordatorio;
    private javax.swing.JComboBox<String> cb_Tama√±oMord;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator11;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JButton jb_AgregarCancion;
    private javax.swing.JButton jb_AgregarUsuarioNuevo;
    private javax.swing.JButton jb_ElimUser;
    private javax.swing.JButton jb_Ok;
    private javax.swing.JButton jb_Pause;
    private javax.swing.JButton jb_Play;
    private javax.swing.JButton jb_ProcesarRecordatorio;
    private javax.swing.JButton jb_SendText;
    private javax.swing.JButton jb_SessionShutter;
    private javax.swing.JButton jb_ShutDown;
    private javax.swing.JButton jb_Stop;
    private javax.swing.JButton jb_UsuariosSettings;
    private javax.swing.JButton jb_cancelar;
    private javax.swing.JButton jb_derechaVI;
    private javax.swing.JButton jb_izquierdaVI;
    private javax.swing.JButton jb_opciones;
    private com.toedter.calendar.JCalendar jc_FechaRecordatorio;
    private javax.swing.JDialog jd_AgregarUsuario;
    private javax.swing.JDialog jd_CMD;
    private javax.swing.JDialog jd_Calendario;
    private javax.swing.JDialog jd_EliminarUsuarios;
    private javax.swing.JDialog jd_FileNavegator;
    private javax.swing.JDialog jd_LogIn;
    private javax.swing.JDialog jd_Mensajero;
    private javax.swing.JDialog jd_Meta;
    private javax.swing.JDialog jd_Mord;
    private javax.swing.JDialog jd_MusicPlayer;
    private javax.swing.JDialog jd_NetBeans;
    private javax.swing.JDialog jd_VisorImagenes;
    private javax.swing.JLabel jl_AliniarAbajoMord;
    private javax.swing.JLabel jl_AliniarArribaMord;
    private javax.swing.JLabel jl_AliniarCentroMord;
    private javax.swing.JLabel jl_ArchivoMord;
    private javax.swing.JLabel jl_BoldMord;
    private javax.swing.JLabel jl_ColorMord;
    private javax.swing.JLabel jl_ColoresUtilizadosMord;
    private javax.swing.JLabel jl_CurrentUser;
    private javax.swing.JLabel jl_FechaEventCalendario;
    private javax.swing.JLabel jl_FuenteMord;
    private javax.swing.JLabel jl_HoraTaskBar;
    private javax.swing.JLabel jl_HoraTopBar;
    private javax.swing.JLabel jl_ItalixMord;
    private javax.swing.JLabel jl_JustCentroMord;
    private javax.swing.JLabel jl_JustDerechaMord;
    private javax.swing.JLabel jl_JustIzquierdaMord;
    private javax.swing.JLabel jl_LockScreen;
    private javax.swing.JLabel jl_LogoMindows;
    private javax.swing.JLabel jl_RecordatorioActivo;
    private javax.swing.JLabel jl_Resaltar;
    private javax.swing.JLabel jl_TamMord;
    private javax.swing.JLabel jl_TiempoDelRecordatorio;
    private javax.swing.JLabel jl_TituloRec;
    private javax.swing.JLabel jl_UnderlineMord;
    private javax.swing.JLabel jl_VisorPrincipal;
    private javax.swing.JLabel jl_colonJPlanner;
    private javax.swing.JLabel jl_colonJPlanner1;
    private javax.swing.JLabel jl_copyright;
    private javax.swing.JLabel jl_mindows;
    private javax.swing.JLabel jl_mindowsLogOn;
    private javax.swing.JLabel jl_password;
    private javax.swing.JLabel jl_userName;
    private javax.swing.JLabel jl_wicrosoftCorp;
    private javax.swing.JMenuItem jm_AdminPass;
    private javax.swing.JMenuItem jm_Agregar;
    private javax.swing.JMenuItem jm_AgregarUsuario;
    private javax.swing.JMenuItem jm_CambiarNombre;
    private javax.swing.JMenuItem jm_Cancelar;
    private javax.swing.JMenuItem jm_Cancelar1;
    private javax.swing.JMenuItem jm_ChangePassword;
    private javax.swing.JMenuItem jm_Copiar;
    private javax.swing.JMenuItem jm_EliminarUsuario;
    private javax.swing.JMenuItem jm_LimpiarCajas;
    private javax.swing.JMenuItem jm_LockComputer;
    private javax.swing.JMenuItem jm_MordAbrir;
    private javax.swing.JMenuItem jm_MordGuardar;
    private javax.swing.JMenuItem jm_OrdenarFecha;
    private javax.swing.JMenuItem jm_OrdenarNombre;
    private javax.swing.JMenuItem jm_OrdenarTama√±o;
    private javax.swing.JMenuItem jm_OrdenarTipo;
    private javax.swing.JMenuItem jm_Organizar;
    private javax.swing.JMenuItem jm_Pegar;
    private javax.swing.JPanel jp_AgregarBackground;
    private javax.swing.JPanel jp_CMDBackGround;
    private javax.swing.JPanel jp_CalendarioBackGround;
    private javax.swing.JPanel jp_ColorLetraMord;
    private javax.swing.JPanel jp_FileNavegatorBackGround;
    private javax.swing.JPanel jp_HomeScreenBackGround;
    private javax.swing.JPanel jp_HomeScreenIcons;
    private javax.swing.JPanel jp_LastColor1;
    private javax.swing.JPanel jp_LastColor2;
    private javax.swing.JPanel jp_LastColor3;
    private javax.swing.JPanel jp_LastColor4;
    private javax.swing.JPanel jp_LastColor5;
    private javax.swing.JPanel jp_LastColor6;
    private javax.swing.JPanel jp_LastColor7;
    private javax.swing.JPanel jp_LastColor8;
    private javax.swing.JPanel jp_LockScreenBackGround;
    private javax.swing.JPanel jp_MetaBackGround;
    private javax.swing.JPanel jp_MordBackground;
    private javax.swing.JPanel jp_MordToolbar;
    private javax.swing.JPanel jp_MusicPlayerBackGround;
    private javax.swing.JPanel jp_NetBeansBackGround;
    private javax.swing.JPanel jp_TaskBar;
    private javax.swing.JPanel jp_VisorImagenesBackGround;
    private javax.swing.JPanel jp_espaciadorIDK;
    private javax.swing.JPanel jp_infoPane;
    private javax.swing.JPanel jp_loginBackGround;
    private javax.swing.JPanel jp_mensajeroBackGround;
    private javax.swing.JPanel jp_midBackGround;
    private javax.swing.JPanel jp_topBackGround;
    private javax.swing.JPanel jp_topbarHS;
    private javax.swing.JPopupMenu jpm_JTreeMenu;
    private javax.swing.JPopupMenu jpm_LogInOpciones;
    private javax.swing.JPopupMenu jpm_MordArchivo;
    private javax.swing.JPopupMenu jpm_SessionShutter;
    private javax.swing.JPopupMenu jpm_UsuariosSettingsAdmin;
    private javax.swing.JRadioButton jrb_EventoCalendario;
    private javax.swing.JRadioButton jrb_TareaCalendario;
    private javax.swing.JTextField jt_ConfirmContraNewUser;
    private javax.swing.JTextField jt_ContraNewUser;
    private javax.swing.JTextField jt_EliminarUser;
    private javax.swing.JTextField jt_NombreNewUser;
    private javax.swing.JTable jt_Playlist;
    private javax.swing.JTable jt_Recordatorios;
    private javax.swing.JTextField jt_TituloRecordatorio;
    private javax.swing.JTextField jt_UserName;
    private javax.swing.JTextField jt_password;
    // End of variables declaration//GEN-END:variables
}  
    

